let arrayFilter,isFunction;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_arrayFilter.js",[["default",["arrayFilter"],function(v){arrayFilter=v}]]);_3f2‍.w("./isFunction.js",[["default",["isFunction"],function(v){isFunction=v}]]);


/**
 * The base implementation of `_.functions` which creates an array of
 * `object` function property names filtered from `props`.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Array} props The property names to filter.
 * @returns {Array} Returns the function names.
 */
function baseFunctions(object, props) {
  return arrayFilter(props, function(key) {
    return isFunction(object[key]);
  });
}

_3f2‍.d(baseFunctions);
