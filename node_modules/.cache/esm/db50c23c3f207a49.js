let baseSortedUniq;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_baseSortedUniq.js",[["default",["baseSortedUniq"],function(v){baseSortedUniq=v}]]);

/**
 * This method is like `_.uniq` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniq([1, 1, 2]);
 * // => [1, 2]
 */
function sortedUniq(array) {
  return (array && array.length)
    ? baseSortedUniq(array)
    : [];
}

_3f2‍.d(sortedUniq);
