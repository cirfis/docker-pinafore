let baseClamp,shuffleSelf,values;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_baseClamp.js",[["default",["baseClamp"],function(v){baseClamp=v}]]);_3f2‍.w("./_shuffleSelf.js",[["default",["shuffleSelf"],function(v){shuffleSelf=v}]]);_3f2‍.w("./values.js",[["default",["values"],function(v){values=v}]]);



/**
 * The base implementation of `_.sampleSize` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function baseSampleSize(collection, n) {
  var array = values(collection);
  return shuffleSelf(array, baseClamp(n, 0, array.length));
}

_3f2‍.d(baseSampleSize);
