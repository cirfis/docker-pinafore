let arrayPush,getPrototype,getSymbols,stubArray;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_arrayPush.js",[["default",["arrayPush"],function(v){arrayPush=v}]]);_3f2‍.w("./_getPrototype.js",[["default",["getPrototype"],function(v){getPrototype=v}]]);_3f2‍.w("./_getSymbols.js",[["default",["getSymbols"],function(v){getSymbols=v}]]);_3f2‍.w("./stubArray.js",[["default",["stubArray"],function(v){stubArray=v}]]);




/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

_3f2‍.d(getSymbolsIn);
