let arrayShuffle,baseShuffle,isArray;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_arrayShuffle.js",[["default",["arrayShuffle"],function(v){arrayShuffle=v}]]);_3f2‍.w("./_baseShuffle.js",[["default",["baseShuffle"],function(v){baseShuffle=v}]]);_3f2‍.w("./isArray.js",[["default",["isArray"],function(v){isArray=v}]]);



/**
 * Creates an array of shuffled values, using a version of the
 * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 * @example
 *
 * _.shuffle([1, 2, 3, 4]);
 * // => [4, 1, 3, 2]
 */
function shuffle(collection) {
  var func = isArray(collection) ? arrayShuffle : baseShuffle;
  return func(collection);
}

_3f2‍.d(shuffle);
