let arrayAggregator,baseAggregator,baseIteratee,isArray;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_arrayAggregator.js",[["default",["arrayAggregator"],function(v){arrayAggregator=v}]]);_3f2‍.w("./_baseAggregator.js",[["default",["baseAggregator"],function(v){baseAggregator=v}]]);_3f2‍.w("./_baseIteratee.js",[["default",["baseIteratee"],function(v){baseIteratee=v}]]);_3f2‍.w("./isArray.js",[["default",["isArray"],function(v){isArray=v}]]);




/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray(collection) ? arrayAggregator : baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
  };
}

_3f2‍.d(createAggregator);
