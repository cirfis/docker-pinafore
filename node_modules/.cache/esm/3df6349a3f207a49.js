let baseIsTypedArray,baseUnary,nodeUtil;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_baseIsTypedArray.js",[["default",["baseIsTypedArray"],function(v){baseIsTypedArray=v}]]);_3f2‍.w("./_baseUnary.js",[["default",["baseUnary"],function(v){baseUnary=v}]]);_3f2‍.w("./_nodeUtil.js",[["default",["nodeUtil"],function(v){nodeUtil=v}]]);



/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

_3f2‍.d(isTypedArray);
