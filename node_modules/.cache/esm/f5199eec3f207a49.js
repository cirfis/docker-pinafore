let Set,noop,setToArray;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_Set.js",[["default",["Set"],function(v){Set=v}]]);_3f2‍.w("./noop.js",[["default",["noop"],function(v){noop=v}]]);_3f2‍.w("./_setToArray.js",[["default",["setToArray"],function(v){setToArray=v}]]);



/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

_3f2‍.d(createSet);
