let baseInvoke,baseRest;_3f2‍.x([["default",()=>_3f2‍.o]]);_3f2‍.w("./_baseInvoke.js",[["default",["baseInvoke"],function(v){baseInvoke=v}]]);_3f2‍.w("./_baseRest.js",[["default",["baseRest"],function(v){baseRest=v}]]);


/**
 * Creates a function that invokes the method at `path` of a given object.
 * Any additional arguments are provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': _.constant(2) } },
 *   { 'a': { 'b': _.constant(1) } }
 * ];
 *
 * _.map(objects, _.method('a.b'));
 * // => [2, 1]
 *
 * _.map(objects, _.method(['a', 'b']));
 * // => [2, 1]
 */
var method = baseRest(function(path, args) {
  return function(object) {
    return baseInvoke(object, path, args);
  };
});

_3f2‍.d(method);
