{"version":3,"sources":["webpack://pinafore/./src/routes/_components/ExternalLink.html","webpack://pinafore/./src/routes/_components/status/StatusSidebar.html","webpack://pinafore/./src/routes/_components/status/StatusAuthorName.html","webpack://pinafore/./src/routes/_components/status/StatusAuthorHandle.html","webpack://pinafore/./src/routes/_components/status/StatusRelativeDate.html","webpack://pinafore/./src/routes/_utils/formatters.js","webpack://pinafore/./src/routes/_components/status/StatusDetails.html","webpack://pinafore/./src/routes/_thirdparty/unescape/unescape.js","webpack://pinafore/./src/routes/_components/status/StatusCard.html","webpack://pinafore/./src/routes/_utils/delegate.js","webpack://pinafore/./src/routes/_actions/favorite.js","webpack://pinafore/./src/routes/_api/favorite.js","webpack://pinafore/./src/routes/_actions/reblog.js","webpack://pinafore/./src/routes/_api/reblog.js","webpack://pinafore/./src/routes/_components/status/StatusToolbar.html","webpack://pinafore/./src/routes/_components/dialog/asyncDialogs/importShowStatusOptionsDialog.js","webpack://pinafore/./src/routes/_components/PlayVideoIcon.html","webpack://pinafore/./src/routes/_components/AutoplayVideo.html","webpack://pinafore/./src/routes/_components/NonAutoplayGifv.html","webpack://pinafore/./src/routes/_utils/convertCssPropertyToDataUrl.js","webpack://pinafore/./src/routes/_components/status/Media.html","webpack://pinafore/./src/routes/_components/status/MediaAttachments.html","webpack://pinafore/./src/routes/_components/status/StatusMediaAttachments.html","webpack://pinafore/./src/routes/_utils/urlIsCrossOrigin.js","webpack://pinafore/./src/routes/_components/status/StatusContent.html","webpack://pinafore/./src/routes/_components/status/StatusSpoiler.html","webpack://pinafore/./src/routes/_components/status/StatusComposeBox.html","webpack://pinafore/./src/routes/_components/status/StatusMentions.html","webpack://pinafore/./src/routes/_thirdparty/timeago/timeago.js","webpack://pinafore/./src/routes/_intl/formatTimeagoDate.js","webpack://pinafore/./src/routes/_actions/polls.js","webpack://pinafore/./src/routes/_api/polls.js","webpack://pinafore/./src/routes/_components/status/StatusPoll.html","webpack://pinafore/./src/routes/_utils/checkDomAncestors.js","webpack://pinafore/./src/routes/_a11y/getAccessibleLabelForStatus.js","webpack://pinafore/./src/routes/_components/status/Status.html","webpack://pinafore/./src/routes/_components/status/StatusHeader.html","webpack://pinafore/./src/routes/_a11y/getAccountAccessibleName.js","webpack://pinafore/./src/routes/_actions/accounts.js","webpack://pinafore/./src/routes/_api/relationships.js","webpack://pinafore/./src/routes/_actions/mention.js","webpack://pinafore/./src/routes/_api/user.js","webpack://pinafore/./src/routes/_components/dialog/asyncDialogs/importShowComposeDialog.js","webpack://pinafore/./src/routes/_components/dialog/asyncDialogs/importShowMediaDialog.js","webpack://pinafore/./src/routes/_static/animations.js","webpack://pinafore/./src/routes/_static/emojiPickerIntl.js","webpack://pinafore/./src/routes/_utils/addEmojiTooltips.js","webpack://pinafore/./src/routes/_utils/createStatusOrNotificationUuid.js","webpack://pinafore/./src/routes/_utils/emojiDatabase.js","webpack://pinafore/./src/routes/_utils/massageStatusPlainText.js","webpack://pinafore/./src/routes/_utils/massageUserText.js"],"names":["className","undefined","normalIconColor","ariaLabel","showIcon","href","computedClass","originalAccount","size","elementId","originalAccountId","uuid","isStatusInOwnThread","$isVeryTinyMobileSize","isStatusInNotification","acct","shortInlineFormattedDate","createdAtDate","absoluteFormattedDate","createdAtLabel","originalStatusId","tabindex","$disableTapOnStatus","formatIntl","time","absoluteDateFormatter","thunk","Intl","DateTimeFormat","year","month","day","hour","minute","shortAbsoluteDateFormatter","dayOnlyAbsoluteDateFormatter","this","get","on","status","id","set","overrideNumReblogs","reblogs_count","overrideNumFavs","favourites_count","applicationWebsite","applicationName","applicationLinkLabel","store","originalStatus","url","externalLinkLabel","displayAbsoluteFormattedDate","numReblogs","numFavs","reblogsLabel","favoritesLabel","application","name","website","$disableReblogCounts","$disableFavCounts","createdAtDateTS","$isMobileSize","format","count","label","chars","getRegex","patterns","Object","keys","concat","RegExp","join","toRegex","str","replace","match","knownValue","codePoint","startsWith","parseInt","substring","length","String","fromCodePoint","e","refs","cardlink","click","unescapedDescription","imageUrl","shortcutScope","open","unescapedTitle","description","enableShortcuts","card","title","window","URL","hostname","provider_name","image","callbacks","onEvent","type","keyCode","target","key","element","getAttribute","parentElement","selection","getSelection","selectionStr","toString","contains","anchorNode","preventDefault","stopPropagation","registerClickDelegates","component","delegates","assign","forEach","registerClickDelegate","callback","__delegateCallbacks","document","addEventListener","async","setFavorited","statusId","favorited","online","toast","currentInstance","accessToken","networkPromise","instanceName","timeout","favoriteStatus","unfavoriteStatus","database","console","error","message","setReblogged","reblogged","reblogStatus","unreblogStatus","newFavoritedValue","favoriteIcon","animate","newRebloggedValue","reblogIcon","requestAnimationFrame","repliesShown","fire","updateRelationshipPromise","showStatusOptionsDialog","then","mod","default","realm","inReplyToUuid","node","querySelector","focus","preventScroll","favoriteKey","reblogKey","replyKey","optionsKey","toggleFavorite","reblog","reply","onOptionsClick","onPostedStatus","favoriteAnimation","reblogAnimation","replyLabel","replyShown","replyIcon","reblogLabel","reblogDisabled","inReplyToId","visibility","$currentStatusModifications","reblogs","favorites","favourited","$largeInlineMedia","focusStyle","poster","width","height","src","coordsToPercent","x","y","mouseOver","playing","staticSrc","blurhash","oneTransparentPixel","onMouseOver","event","style","useWidthHeight","colorsToUrls","Map","canvas","context","decodedBlurhash","$ignoreBlurhash","prop","color","getComputedStyle","documentElement","getPropertyValue","createElement","getContext","fillStyle","rect","fill","toDataURL","convertCssPropertyToDataUrl","mediaAttachments","index","importShowMediaDialog","onClick","$autoplayGifs","mouseover","imageButtonAriaLabel","inlineMediaStyle","ariaHidden","videoOrAudioButtonLabel","previewUrl","inlineWidth","inlineHeight","noNativeWidthHeight","animatedLabel","media","meta","small","smallWidth","smallHeight","original","originalWidth","originalHeight","preview_url","blurhashToUse","showAsSensitive","animated","audio","nCols","sensitive","oddCols","twoCols","classname","sensitiveShown","changeFocus","sensitivesShown","hideSensitiveMedia","showSensitiveMedia","toggleSensitiveMedia","customSize","showFirstMedia","$sensitivesShown","media_attachments","$markMediaAsSensitive","$neverMarkMediaAsSensitive","Math","ceil","urlIsCrossOrigin","location","origin","mentions","tags","anchors","Array","from","getElementsByTagName","anchor","classList","tag","toLowerCase","endsWith","setAttribute","removeAttribute","mention","s","hydrateContent","massagedContent","shown","content","originalStatusEmojis","massageUserText","spoilersShown","toggleSpoilers","bind","spoilerShown","massagedSpoilerText","spoilerText","emojifyText","observe","recalc","debounced","debounce","throttled","throttle","leading","trailing","setupRecalculateHeightListener","$currentComposeData","username","i","IndexMapEn","SEC_ARRAY","intlFormat","RelativeTimeFormat","formatDiff","seconds","pastDate","abs","floor","number","unit","formatRelativeTime","milliseconds","formatTimeagoDate","date","now","res","min","pollId","getPoll","choices","voteOnPoll","map","_","doAsyncActionWithDelay","func","start","Date","timeElapsed","Promise","resolve","setTimeout","getChoices","form","options","elements","checked","push","expiresAtTS","expired","$now","max","formatTimeagoFutureDate","loading","poll","polls","formDisabled","onRefreshClick","refreshElementId","onChange","onSubmit","cleanTitle","option","multiple","share","voted","votesText","expiryText","expiresAtTimeagoFormatted","notification","useNarrowSize","expiresAt","expiresAtAbsoluteFormatted","$polls","votes_count","votesCount","round","expires_at","getTime","checkDomAncestors","checkFunc","stopFunc","thisNode","getNotificationText","omitEmojiInDisplayNames","notificationAccountDisplayName","getAccountAccessibleName","account","getReblogText","accountDisplayName","cleanupText","text","trim","getAccessibleLabelForStatus","plainTextContent","showContent","disableLongAriaLabels","showMedia","showPoll","originalAccountDisplayName","contentTextToShow","spoiler","mediaTextToShow","pollTextToShow","privacyText","getPrivacyText","privacy","filter","Boolean","INPUT_TAGS","Set","isUserInputElement","has","localName","isToolbar","isStatusArticle","accountForShortcut","disableTapOnStatus","onClickOrKeydown","scheduleIdleTask","preloadHiddenContent","addEmojiTooltips","article","params","timestampParams","openAuthorProfile","mentionAuthor","replyVisibility","showHeader","showCard","measureText","plainTextContentOverLength","spoiler_text","in_reply_to_id","$currentInstance","timelineType","timelineValue","notificationId","createStatusOrNotificationUuid","$spoilersShown","$repliesShown","$hideCards","emojis","display_name","$omitEmojiInDisplayNames","created_at","$disableRelativeTimestamps","$disableLongAriaLabels","includes","$underlineLinks","accountId","icon","notificationType","actionText","$currentVerifyCredentials","displayName","_updateAccount","localPromise","remotePromise","currentAccountProfile","_updateRelationship","getRelationship","relationship","currentAccountRelationship","updateLocalRelationship","clearProfileAndRelationship","updateProfileAndRelationship","all","updateRelationship","composeNewStatusMentioning","getVerifyCredentials","getAccount","importShowComposeDialog","FAVORITE_ANIMATION","properties","transform","duration","easing","REBLOG_ANIMATION","FOLLOW_BUTTON_ANIMATION","emojiPickerDataSource","emojiPickerI18n","emojiPickerLocale","domNode","querySelectorAll","emojiData","emoji","textContent","shortcodes","applySkinToneToEmoji","skinTone","unicode","skins","tone","find","init","locale","dataSource","setCustomEmoji","customEmoji","findByUnicodeOrName","unicodeOrName","getEmojiByUnicodeOrName","getPreferredSkinTone","findBySearchQuery","query","getEmojiBySearchQuery","newState","close","STARTING_TAG_REGEX","massageStatusPlainText","test"],"mappings":"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","file":"6957.852051eb6cb52b90b0fd.6957.js","sourcesContent":["<a rel=\"nofollow noopener\"\n   target=\"_blank\"\n   {href}\n   aria-label={ariaLabel}\n   class={computedClass}>\n  <slot></slot>{#if showIcon}\n    <SvgIcon className=\"external-link-svg\" href=\"#fa-external-link\" />\n  {/if}</a>\n<style>\n  .external-link-with-icon {\n    display: inline-flex;\n    align-items: center;\n  }\n  :global(.external-link-with-icon .external-link-svg) {\n    margin-left: 4px;\n    width: 14px;\n    height: 14px;\n    fill: var(--deemphasized-text-color);\n  }\n  :global(.external-link-with-icon.normal-icon-color .external-link-svg) {\n    fill: var(--body-text-color);\n  }\n</style>\n<script>\n  import { classname } from '../_utils/classname'\n  import SvgIcon from './SvgIcon.html'\n\n  export default {\n    data: () => ({\n      className: undefined,\n      normalIconColor: false,\n      ariaLabel: '',\n      showIcon: false\n    }),\n    computed: {\n      computedClass: ({ className, showIcon, normalIconColor }) => (classname(\n        'external-link',\n        className,\n        showIcon && 'external-link-with-icon',\n        normalIconColor && 'normal-icon-color'\n      ))\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","<a id={elementId}\n   class=\"status-sidebar size-{size}\"\n   rel=\"prefetch\"\n   href=\"/accounts/{originalAccountId}\"\n   aria-hidden=\"true\"\n   tabindex=\"-1\"\n>\n  <!-- the avatar is duplicated information, so hide from tab order and screenreaders -->\n  <Avatar account={originalAccount}\n          isLink=\"true\"\n          {size} />\n</a>\n<style>\n  .status-sidebar {\n    grid-area: sidebar;\n    margin-right: 15px;\n  }\n\n  .status-sidebar.size-small {\n    width: 48px;\n    height: 48px;\n  }\n\n  .status-sidebar.size-medium {\n    width: 64px;\n    height: 64px;\n  }\n\n  @media (max-width: 767px) {\n    .status-sidebar {\n      margin-right: 5px;\n    }\n  }\n</style>\n<script>\n  import Avatar from '../Avatar.html'\n  export default {\n    components: {\n      Avatar\n    },\n    computed: {\n      elementId: ({ uuid }) => `status-author-avatar-${uuid}`,\n      size: ({ isStatusInOwnThread, $isVeryTinyMobileSize }) => {\n        if ($isVeryTinyMobileSize) {\n          return isStatusInOwnThread ? 'small' : 'extra-small'\n        }\n        return isStatusInOwnThread ? 'medium' : 'small'\n      }\n    }\n  }\n</script>\n","<a id={elementId}\n   class=\"status-author-name {isStatusInNotification ? 'status-in-notification' : '' } {isStatusInOwnThread ? 'status-in-own-thread' : ''}\"\n   rel=\"prefetch\"\n   href=\"/accounts/{originalAccountId}\"\n   title=\"{'@' + originalAccount.acct}\"\n>\n  <AccountDisplayName account={originalAccount} />\n</a>\n<style>\n  .status-author-name {\n    grid-area: author-name;\n    align-self: center;\n    margin-left: 5px;\n    font-size: 1.1em;\n    min-width: 0;\n    font-weight: 600;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .status-author-name.status-in-own-thread {\n    font-size: 1.3em;\n  }\n\n  .status-author-name, .status-author-name:hover, .status-author-name:visited {\n    color: var(--body-text-color);\n  }\n\n  .status-author-name.status-in-notification,\n  .status-author-name.status-in-notification:hover,\n  .status-author-name.status-in-notification:visited {\n    color: var(--very-deemphasized-text-color);\n  }\n\n</style>\n<script>\n  import AccountDisplayName from '../profile/AccountDisplayName.html'\n\n  export default {\n    computed: {\n      elementId: ({ uuid }) => `status-author-name-${uuid}`\n    },\n    components: {\n      AccountDisplayName\n    }\n  }\n</script>\n","<span class=\"status-author-handle {isStatusInNotification ? 'status-in-notification' : '' }\">\n  {'@' + originalAccount.acct}\n</span>\n<style>\n  .status-author-handle {\n    grid-area: author-handle;\n    align-self: center;\n    margin-left: 5px;\n    color: var(--deemphasized-text-color);\n    font-size: 1.1em;\n    min-width: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .status-author-handle.status-in-notification {\n    color: var(--very-deemphasized-text-color);\n  }\n</style>","<a id={elementId}\n   class=\"status-relative-date {isStatusInNotification ? 'status-in-notification' : '' }\"\n   href=\"/statuses/{originalStatusId}\"\n   rel=\"prefetch\"\n   {tabindex}\n>\n  <time datetime={createdAtDate} title={absoluteFormattedDate}\n        aria-label={createdAtLabel}>\n    {shortInlineFormattedDate}\n  </time>\n</a>\n<style>\n  .status-relative-date {\n    grid-area: relative-date;\n    align-self: center;\n    margin-left: 5px;\n    margin-right: 10px;\n    font-size: 1.1em;\n    text-align: right;\n    white-space: nowrap;\n  }\n  .status-relative-date, .status-relative-date:hover, .status-relative-date:visited {\n    color: var(--deemphasized-text-color);\n  }\n\n  .status-relative-date.status-in-notification,\n  .status-relative-date.status-in-notification:hover,\n  .status-relative-date.status-in-notification:visited {\n    color: var(--very-deemphasized-text-color);\n  }\n\n</style>\n<script>\n  import { formatIntl } from '../../_utils/formatIntl'\n\n  export default {\n    computed: {\n      elementId: ({ uuid }) => `status-relative-date-${uuid}`,\n      tabindex: ({ $disableTapOnStatus }) => (\n        // If you can't tap on the entire status, then you need some way to click on it. Otherwise it's\n        // just a duplicate link in the focus order.\n        $disableTapOnStatus ? '0' : '-1'\n      ),\n      createdAtLabel: ({ shortInlineFormattedDate }) => (\n        formatIntl([[\"time\"],\" - click to show thread\"], { time: shortInlineFormattedDate })\n      )\n    }\n  }\n</script>\n","import { LOCALE } from '../_static/intl'\nimport { thunk } from './thunk'\n\nexport const absoluteDateFormatter = thunk(() => new Intl.DateTimeFormat(LOCALE, {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n}))\n\nexport const shortAbsoluteDateFormatter = thunk(() => new Intl.DateTimeFormat(LOCALE, {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric',\n  hour: '2-digit',\n  minute: '2-digit'\n}))\n\nexport const dayOnlyAbsoluteDateFormatter = thunk(() => new Intl.DateTimeFormat(LOCALE, {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric'\n}))\n","<div class=\"status-details\">\n  <ExternalLink className=\"status-absolute-date\"\n                href={originalStatus.url}\n                showIcon={true}\n                ariaLabel={externalLinkLabel}\n  >\n    <time datetime={createdAtDate} title={absoluteFormattedDate}>\n      {displayAbsoluteFormattedDate}\n    </time>\n  </ExternalLink>\n  {#if applicationName}\n    {#if applicationWebsite}\n      <ExternalLink className=\"status-application\"\n                    href={applicationWebsite}\n                    showIcon={false}\n                    ariaLabel={applicationLinkLabel}>\n        <span class=\"status-application-span\">\n          {applicationName}\n        </span>\n      </ExternalLink>\n    {:else}\n      <span class=\"status-application status-application-span\">\n        {applicationName}\n      </span>\n    {/if}\n  {/if}\n  <a class=\"status-favs-reblogs status-reblogs\"\n     rel=\"prefetch\"\n     href=\"/statuses/{originalStatusId}/reblogs\"\n     aria-label={reblogsLabel}>\n    <SvgIcon className=\"status-favs-reblogs-svg\" href=\"#fa-retweet\" />\n    <span>{numReblogs}</span>\n  </a>\n  <a class=\"status-favs-reblogs status-favs\"\n     rel=\"prefetch\"\n     href=\"/statuses/{originalStatusId}/favorites\"\n     aria-label={favoritesLabel}>\n    <SvgIcon className=\"status-favs-reblogs-svg\" href=\"#fa-star\" />\n    <span>{numFavs}</span>\n  </a>\n</div>\n<style>\n  .status-details {\n    grid-area: details;\n    display: grid;\n    grid-template-columns: minmax(0, max-content) repeat(3, max-content);\n    grid-gap: 20px;\n    align-items: center;\n    justify-content: left;\n    margin: 0 5px 10px;\n  }\n  :global(.status-absolute-date) {\n    font-size: 1.1em;\n    min-width: 0;\n  }\n\n  :global(.status-absolute-date time) {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  :global(.status-application) {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: pre-wrap;\n    font-size: 1.1em;\n  }\n\n  :global(.status-application, a.status-application, a.status-application:hover) {\n    color: var(--deemphasized-text-color);\n  }\n\n  :global(a.status-application) {\n    display: inline-flex;\n    align-items: center;\n  }\n\n  .status-application-span {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .status-favs-reblogs {\n    font-size: 1.1em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .status-favs-reblogs span {\n    margin-left: 5px;\n  }\n\n  .status-favs-reblogs,\n  .status-favs-reblogs:hover,\n  .status-favs-reblogs:visited {\n    color: var(--deemphasized-text-color);\n  }\n\n  :global(.status-favs-reblogs-svg) {\n    fill: var(--deemphasized-text-color);\n    width: 18px;\n    height: 18px;\n  }\n\n  :global(.status-absolute-date, .status-absolute-date:hover, .status-absolute-date:visited) {\n    color: var(--deemphasized-text-color);\n  }\n\n  @media (max-width: 479px) {\n    :global(.status-absolute-date) {\n      font-size: 1em;\n    }\n    .status-favs-reblogs {\n      font-size: 1em;\n    }\n    :global(.status-application) {\n      font-size: 1em;\n    }\n    .status-details {\n      grid-gap: 5px;\n      justify-content: space-between;\n    }\n\n  }\n\n</style>\n<script>\n  import ExternalLink from '../ExternalLink.html'\n  import { store } from '../../_store/store'\n  import { absoluteDateFormatter, shortAbsoluteDateFormatter } from '../../_utils/formatters'\n  import SvgIcon from '../SvgIcon.html'\n  import { on } from '../../_utils/eventBus'\n  import { formatIntl } from '../../_utils/formatIntl'\n\n  export default {\n    oncreate () {\n      const { originalStatusId } = this.get()\n      on('statusUpdated', this, status => {\n        if (status.id === originalStatusId) {\n          this.set({\n            overrideNumReblogs: status.reblogs_count || 0,\n            overrideNumFavs: status.favourites_count || 0\n          })\n        }\n      })\n    },\n    store: () => store,\n    data: () => ({\n      overrideNumReblogs: undefined,\n      overrideNumFavs: undefined\n    }),\n    computed: {\n      originalStatusId: ({ originalStatus }) => originalStatus.id,\n      application: ({ originalStatus }) => originalStatus.application,\n      applicationName: ({ application }) => (application && application.name),\n      applicationWebsite: ({ application }) => (application && application.website),\n      numReblogs: ({ $disableReblogCounts, overrideNumReblogs, originalStatus }) => {\n        if ($disableReblogCounts) {\n          return 0\n        }\n        if (typeof overrideNumReblogs === 'number') {\n          return overrideNumReblogs\n        }\n        return originalStatus.reblogs_count || 0\n      },\n      numFavs: ({ $disableFavCounts, overrideNumFavs, originalStatus }) => {\n        if ($disableFavCounts) {\n          return 0\n        }\n        if (typeof overrideNumFavs === 'number') {\n          return overrideNumFavs\n        }\n        return originalStatus.favourites_count || 0\n      },\n      displayAbsoluteFormattedDate: ({ createdAtDateTS, $isMobileSize }) => (\n        ($isMobileSize ? shortAbsoluteDateFormatter : absoluteDateFormatter)().format(createdAtDateTS)\n      ),\n      reblogsLabel: ({ $disableReblogCounts, numReblogs }) => {\n        if ($disableReblogCounts) {\n          return \"Boost counts hidden\"\n        }\n        return formatIntl([\"Boosted \",[\"count\",\"plural\",0,{\"one\":[\"1 time\"],\"other\":[[\"count\"],\" times\"]}]], { count: numReblogs })\n      },\n      favoritesLabel: ({ $disableFavCounts, numFavs }) => {\n        if ($disableFavCounts) {\n          return \"Favorite counts hidden\"\n        }\n        return formatIntl([\"Favorited \",[\"count\",\"plural\",0,{\"one\":[\"1 time\"],\"other\":[[\"count\"],\" times\"]}]], { count: numFavs })\n      },\n      externalLinkLabel: ({ displayAbsoluteFormattedDate }) => (\n        formatIntl([[\"label\"],\" (opens in new window)\"], { label: displayAbsoluteFormattedDate })\n      ),\n      applicationLinkLabel: ({ applicationName }) => (\n        formatIntl([[\"label\"],\" (opens in new window)\"], { label: applicationName })\n      )\n    },\n    components: {\n      ExternalLink,\n      SvgIcon\n    }\n  }\n</script>\n","//\n// Originally via https://github.com/jonschlinkert/unescape/blob/98d1e52/index.js\n//\nimport { thunk } from '../../_utils/thunk'\n\n// via https://www.htmlhelp.com/reference/html40/entities/special.html\n// plus some more known entities like pound, nbsp, etc\nconst chars = {\n  '&amp;': '&',\n  '&apos;': '\\'',\n  '&bdquo;': '„',\n  '&cent;': '¢',\n  '&circ;': 'ˆ',\n  '&copy;': '©',\n  '&dagger;': '†',\n  '&Dagger;': '‡',\n  '&emsp;': ' ',\n  '&ensp;': ' ',\n  '&euro;': '€',\n  '&gt;': '>',\n  '&ldquo;': '“',\n  '&lrm;': '',\n  '&lsaquo;': '‹',\n  '&lsquo;': '‘',\n  '&lt;': '<',\n  '&mdash;': '—',\n  '&nbsp;': ' ',\n  '&ndash;': '–',\n  '&oelig;': 'œ',\n  '&OElig;': 'Œ',\n  '&permil;': '‰',\n  '&pound;': '£',\n  '&quot;': '\"',\n  '&rdquo;': '”',\n  '&reg;': '®',\n  '&rsaquo;': '›',\n  '&rsquo;': '’',\n  '&sbquo;': '‚',\n  '&scaron;': 'š',\n  '&Scaron;': 'Š',\n  '&thinsp;': ' ',\n  '&tilde;': '˜',\n  '&yen;': '¥',\n  '&Yuml;': 'Ÿ'\n}\n\nconst getRegex = thunk(() => toRegex(chars))\n\n/**\n * Convert HTML entities to HTML characters.\n *\n * @param  {String} `str` String with HTML entities to un-escape.\n * @return {String}\n */\nfunction unescape (str) {\n  return str.replace(getRegex(), replace)\n}\n\nfunction replace (match) {\n  const knownValue = chars[match]\n  if (knownValue) {\n    return knownValue\n  }\n  let codePoint\n  try {\n    if (match.startsWith('&#x')) { // hex\n      codePoint = parseInt(match.substring(3, match.length - 1), 16)\n    } else { // decimal\n      codePoint = parseInt(match.substring(2, match.length - 1), 10)\n    }\n    return String.fromCodePoint(codePoint)\n  } catch (e) {\n    return match // bad code point, bail out\n  }\n}\n\nfunction toRegex (chars) {\n  const patterns = Object.keys(chars).concat([\n    '&#[0-9]{1,6};', // decimal code points\n    '&#x[a-fA-F0-9]{1,6};' // hex code points\n  ])\n\n  return new RegExp('(' + patterns.join('|') + ')', 'g')\n}\n\n/**\n * Expose `unescape`\n */\n\nexport { unescape }\n","<a ref:cardlink href={url} class=\"status-card\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <strong class=\"card-title\" title={unescapedTitle}>\n     {unescapedTitle}\n    </strong>\n  {#if description}\n    <div class=\"card-content\">\n  {#if imageUrl}\n    <div class=\"status-card-image-container\">\n      <LazyImage src={imageUrl} ariaHidden={true} />\n    </div>\n  {/if}\n    <span class=\"card-description\">\n      {unescapedDescription}\n    </span>\n  </div>\n  {/if}\n  {#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"l\" on:pressed=\"open(url)\" />\n  {/if}\n</a>\n<style>\n  .status-card {\n    grid-area: card;\n    display: flex;\n    flex-direction: column;\n    padding: 15px;\n\n    text-decoration: none;\n    color: inherit;\n\n    overflow: hidden;\n    margin: 10px 10px 10px 5px;\n\n    border: 1px solid var(--settings-list-item-border);\n    background: var(--settings-list-item-bg-hover);\n    border-radius: 6px;\n  }\n\n  .status-card:hover {\n    background: transparent;\n  }\n\n  .status-card :first-child:not(span) {\n    flex-shrink: 0;\n  }\n\n  .card-content {\n    display: flex;\n    align-items: center;\n    margin-top: 5px;\n    opacity: 0.8;\n  }\n\n  .status-card-image-container {\n    position: relative;\n    width: 50px;\n    height: 50px;\n  }\n\n  :global(.status-card-image-container img) {\n    object-fit: cover;\n  }\n\n  .card-title {\n    font-weight: 600;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    width: 100%;\n    display: inline-block;\n    opacity: 0.8;\n  }\n\n  .card-description {\n    font-size: small;\n    line-height: 1.4;\n    max-height: 5.6em; /* 4 * line-height */\n    overflow: hidden;\n  }\n\n  .card-description:not(:first-child) {\n    margin-left: 15px;\n  }\n\n\n</style>\n<script>\n  import LazyImage from '../LazyImage.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { unescape } from '../../_thirdparty/unescape/unescape'\n\n  export default {\n    components: {\n      Shortcut,\n      LazyImage\n    },\n    computed: {\n      card: ({ originalStatus }) => originalStatus.card,\n      title: ({ card }) => card.title,\n      unescapedTitle: ({ title }) => title && unescape(title),\n      url: ({ card }) => card.url,\n      hostname: ({ url }) => window.URL ? new window.URL(url).hostname : '',\n      description: ({ card, hostname }) => card.description || card.provider_name || hostname,\n      unescapedDescription: ({ description }) => description && unescape(description),\n      imageUrl: ({ card }) => card.image\n    },\n    methods: {\n      open () {\n        if (this.refs.cardlink) {\n          this.refs.cardlink.click()\n        }\n      }\n\n    }\n  }\n</script>\n","// Delegate certain events to the global document for perf purposes.\n\nconst callbacks = {}\n\nif (process.browser) {\n  window.__delegateCallbacks = callbacks\n}\n\nfunction onEvent (e) {\n  const { type, keyCode, target } = e\n  if (!(type === 'click' || (type === 'keydown' && keyCode === 13))) {\n    // we're not interested in any non-click or non-Enter events\n    return\n  }\n  let key\n  let element = target\n  while (element) {\n    if ((key = element.getAttribute('id'))) {\n      break\n    }\n    element = element.parentElement\n  }\n  if (key && callbacks[key]) {\n    if (type === 'click') {\n      const selection = window.getSelection()\n      const selectionStr = selection && selection.toString()\n      if (selectionStr && selectionStr.length && target.contains(selection.anchorNode)) {\n        return // ignore if the user is selecting text inside the clickable area\n      }\n    }\n    const res = callbacks[key](e) // callback returns true to indicate it has handled the action\n    if (process.env.NODE_ENV !== 'production' && typeof res !== 'boolean') {\n      console.warn(`Callback returned a non-boolean response: \"${key}\". This should never happen.`)\n    }\n    if (res) {\n      e.preventDefault()\n      e.stopPropagation()\n    }\n  }\n}\n\nexport function registerClickDelegates (component, delegates) {\n  Object.assign(callbacks, delegates)\n\n  component.on('destroy', () => {\n    Object.keys(delegates).forEach(key => {\n      delete callbacks[key]\n    })\n  })\n}\n\nexport function registerClickDelegate (component, key, callback) {\n  registerClickDelegates(component, { [key]: callback })\n}\n\nif (process.browser) {\n  document.addEventListener('click', onEvent)\n  document.addEventListener('keydown', onEvent)\n}\n","import { favoriteStatus, unfavoriteStatus } from '../_api/favorite'\nimport { store } from '../_store/store'\nimport { toast } from '../_components/toast/toast'\nimport { database } from '../_database/database'\nimport { formatIntl } from '../_utils/formatIntl'\n\nexport async function setFavorited (statusId, favorited) {\n  const { online } = store.get()\n  if (!online) {\n    /* no await */ toast.say(favorited ? \"You cannot favorite while offline\" : \"You cannot unfavorite while offline\")\n    return\n  }\n  const { currentInstance, accessToken } = store.get()\n  const networkPromise = favorited\n    ? favoriteStatus(currentInstance, accessToken, statusId)\n    : unfavoriteStatus(currentInstance, accessToken, statusId)\n  store.setStatusFavorited(currentInstance, statusId, favorited) // optimistic update\n  try {\n    await networkPromise\n    await database.setStatusFavorited(currentInstance, statusId, favorited)\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(favorited\n      ? formatIntl([\"Unable to favorite: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unfavorite: \",[\"error\"]], { error: (e.message || '') })\n    )\n    store.setStatusFavorited(currentInstance, statusId, !favorited) // undo optimistic update\n  }\n}\n","import { post, WRITE_TIMEOUT } from '../_utils/ajax'\nimport { basename, auth } from './utils'\n\nexport async function favoriteStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/favourite`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unfavoriteStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/unfavourite`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","import { store } from '../_store/store'\nimport { toast } from '../_components/toast/toast'\nimport { reblogStatus, unreblogStatus } from '../_api/reblog'\nimport { database } from '../_database/database'\nimport { formatIntl } from '../_utils/formatIntl'\n\nexport async function setReblogged (statusId, reblogged) {\n  const online = store.get()\n  if (!online) {\n    /* no await */ toast.say(reblogged ? \"You cannot boost while offline.\" : \"You cannot unboost while offline.\")\n    return\n  }\n  const { currentInstance, accessToken } = store.get()\n  const networkPromise = reblogged\n    ? reblogStatus(currentInstance, accessToken, statusId)\n    : unreblogStatus(currentInstance, accessToken, statusId)\n  store.setStatusReblogged(currentInstance, statusId, reblogged) // optimistic update\n  try {\n    await networkPromise\n    await database.setStatusReblogged(currentInstance, statusId, reblogged)\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(reblogged\n      ? formatIntl([\"Failed to boost: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Failed to unboost: \",[\"error\"]], { error: (e.message || '') })\n    )\n    store.setStatusReblogged(currentInstance, statusId, !reblogged) // undo optimistic update\n  }\n}\n","import { post } from '../_utils/ajax'\nimport { basename, auth } from './utils'\n\nexport async function reblogStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/reblog`\n  return post(url, null, auth(accessToken))\n}\n\nexport async function unreblogStatus (instanceName, accessToken, statusId) {\n  const url = `${basename(instanceName)}/api/v1/statuses/${statusId}/unreblog`\n  return post(url, null, auth(accessToken))\n}\n","<div class=\"status-toolbar {isStatusInOwnThread ? 'status-in-own-thread' : ''}\" ref:node>\n  <IconButton\n    className=\"status-toolbar-reply-button\"\n    label={replyLabel}\n    pressedLabel=\"Close reply\"\n    pressable={true}\n    pressed={replyShown}\n    href={replyIcon}\n    clickListener={false}\n    elementId={replyKey}\n    />\n  <IconButton\n    label={reblogLabel}\n    pressedLabel=\"Unboost\"\n    pressable={!reblogDisabled}\n    pressed={reblogged}\n    disabled={reblogDisabled}\n    href={reblogIcon}\n    clickListener={false}\n    elementId={reblogKey}\n    ref:reblogIcon\n  />\n  <IconButton\n    label=\"Favorite\"\n    pressedLabel=\"Unfavorite\"\n    pressable={true}\n    pressed={favorited}\n    href=\"#fa-star\"\n    clickListener={false}\n    elementId={favoriteKey}\n    ref:favoriteIcon\n    />\n  <IconButton\n    label=\"More options\"\n    href=\"#fa-ellipsis-h\"\n    clickListener={false}\n    elementId={optionsKey}\n  />\n</div>\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"f\" on:pressed=\"toggleFavorite()\"/>\n  <Shortcut scope={shortcutScope} key=\"r\" on:pressed=\"reply()\"/>\n  <Shortcut scope={shortcutScope} key=\"b\" on:pressed=\"reblog()\"/>\n{/if}\n<style>\n  .status-toolbar {\n    grid-area: toolbar;\n    display: flex;\n    justify-content: space-between;\n    pointer-events: none;\n  }\n  .status-toolbar.status-in-own-thread {\n    margin-left: 63px; /* offset to align all toolbar items: 48px avatar + 15px margin-right */\n  }\n\n  @media (max-width: 767px) {\n    .status-toolbar.status-in-own-thread {\n      margin-left: 53px; /* offset to align all toolbar items: 48px avatar + 5px margin-right */\n    }\n  }\n\n  @media (max-width: 240px) {\n    :global(.status-toolbar .icon-button-svg) {\n      width: 20px;\n      height: 20px;\n    }\n  }\n</style>\n<script>\n  import IconButton from '../IconButton.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store'\n  import { registerClickDelegates } from '../../_utils/delegate'\n  import { setFavorited } from '../../_actions/favorite'\n  import { setReblogged } from '../../_actions/reblog'\n  import { importShowStatusOptionsDialog } from '../dialog/asyncDialogs/importShowStatusOptionsDialog.js'\n  import { updateProfileAndRelationship } from '../../_actions/accounts'\n  import { FAVORITE_ANIMATION, REBLOG_ANIMATION } from '../../_static/animations'\n  import { on } from '../../_utils/eventBus'\n\n  export default {\n    oncreate () {\n      const {\n        favoriteKey,\n        reblogKey,\n        replyKey,\n        optionsKey\n      } = this.get()\n      registerClickDelegates(this, {\n        [favoriteKey]: () => {\n          this.toggleFavorite()\n          return true\n        },\n        [reblogKey]: () => {\n          this.reblog()\n          return true\n        },\n        [replyKey]: () => {\n          this.reply()\n          return true\n        },\n        [optionsKey]: () => {\n          this.onOptionsClick()\n          return true\n        }\n      })\n      on('postedStatus', this, this.onPostedStatus)\n    },\n    components: {\n      IconButton,\n      Shortcut\n    },\n    store: () => store,\n    methods: {\n      toggleFavorite () {\n        const { originalStatusId, favorited } = this.get()\n        const newFavoritedValue = !favorited\n        /* no await */ setFavorited(originalStatusId, newFavoritedValue)\n        if (newFavoritedValue) {\n          this.refs.favoriteIcon.animate(FAVORITE_ANIMATION)\n        }\n      },\n      reblog () {\n        const { originalStatusId, reblogged } = this.get()\n        const newRebloggedValue = !reblogged\n        /* no await */ setReblogged(originalStatusId, newRebloggedValue)\n        if (newRebloggedValue) {\n          this.refs.reblogIcon.animate(REBLOG_ANIMATION)\n        }\n      },\n      reply () {\n        requestAnimationFrame(() => {\n          const { uuid } = this.get()\n          const { repliesShown } = this.store.get()\n          repliesShown[uuid] = !repliesShown[uuid]\n          this.store.set({ repliesShown })\n          this.fire('recalculateHeight')\n        })\n      },\n      async onOptionsClick () {\n        const { originalStatus, originalAccountId } = this.get()\n        const updateRelationshipPromise = updateProfileAndRelationship(originalAccountId)\n        const showStatusOptionsDialog = await importShowStatusOptionsDialog()\n        await updateRelationshipPromise\n        showStatusOptionsDialog(originalStatus)\n      },\n      onPostedStatus (realm, inReplyToUuid) {\n        const {\n          originalStatusId,\n          uuid\n        } = this.get()\n        if (realm !== originalStatusId ||\n            inReplyToUuid !== uuid) {\n          return\n        }\n        try {\n          // return status to the reply button after posting a reply\n          this.refs.node.querySelector('.status-toolbar-reply-button').focus({ preventScroll: true })\n        } catch (e) { /* ignore */ }\n      }\n    },\n    data: () => ({\n      favoriteAnimation: FAVORITE_ANIMATION,\n      reblogAnimation: REBLOG_ANIMATION\n    }),\n    computed: {\n      replyLabel: ({ inReplyToId }) => (\n        inReplyToId ? \"Reply to thread\" : \"Reply\"\n      ),\n      replyIcon: ({ inReplyToId }) => inReplyToId ? '#fa-reply-all' : '#fa-reply',\n      reblogLabel: ({ visibility }) => {\n        switch (visibility) {\n          case 'private':\n            return \"Cannot be boosted because this is followers-only\"\n          case 'direct':\n            return \"Cannot be boosted because this is a direct message\"\n          default:\n            return \"Boost\"\n        }\n      },\n      reblogIcon: ({ visibility }) => {\n        switch (visibility) {\n          case 'private':\n            return '#fa-lock'\n          case 'direct':\n            return '#fa-envelope'\n          default:\n            return '#fa-retweet'\n        }\n      },\n      reblogDisabled: ({ visibility }) => {\n        return visibility === 'private' || visibility === 'direct'\n      },\n      reblogged: ({ originalStatusId, $currentStatusModifications, originalStatus }) => {\n        if ($currentStatusModifications && originalStatusId in $currentStatusModifications.reblogs) {\n          return $currentStatusModifications.reblogs[originalStatusId]\n        }\n        return originalStatus.reblogged\n      },\n      favorited: ({ originalStatusId, $currentStatusModifications, originalStatus }) => {\n        if ($currentStatusModifications && originalStatusId in $currentStatusModifications.favorites) {\n          return $currentStatusModifications.favorites[originalStatusId]\n        }\n        return originalStatus.favourited\n      },\n      favoriteKey: ({ uuid }) => `fav-${uuid}`,\n      reblogKey: ({ uuid }) => `reblog-${uuid}`,\n      replyKey: ({ uuid }) => `reply-${uuid}`,\n      optionsKey: ({ uuid }) => `options-${uuid}`\n    }\n  }\n</script>\n","export const importShowStatusOptionsDialog = () => import(\n  '../creators/showStatusOptionsDialog'\n).then(mod => mod.default)\n","<div class=\"play-video-icon {className || ''}\">\n  <SvgIcon className=\"play-video-icon-svg\" href=\"#fa-play-circle\" />\n</div>\n<style>\n  .play-video-icon {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 40;\n    pointer-events: none;\n  }\n  :global(.play-video-icon-svg) {\n    width: 72px;\n    height: 72px;\n    fill: var(--mask-svg-fill);\n    border-radius: 100%;\n    background: var(--mask-opaque-bg);\n  }\n</style>\n<script>\n  import SvgIcon from './SvgIcon.html'\n\n  export default {\n    data: () => ({\n      className: undefined\n    }),\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","<div class=\"autoplay-wrapper  {$largeInlineMedia ? '' : 'autoplay-video-fixed-size'}\"\n     style=\"width: {width}px; height: {height}px;\"\n>\n    <video\n    class=\"autoplay-video {$largeInlineMedia ? '' : 'autoplay-video-fixed-size'}\"\n    aria-label={ariaLabel || ''}\n    style=\"{focusStyle} background-image: url({poster}); \"\n    {poster}\n    {width}\n    {height}\n    {src}\n    autoplay\n    muted\n    loop\n    webkit-playsinline\n    playsinline\n    />\n</div>\n<style>\n  .autoplay-wrapper {\n    position: relative;\n    margin: 0;\n    padding: 0;\n  }\n\n  .autoplay-video {\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    display: flex;\n  }\n\n  .autoplay-video-fixed-size {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n</style>\n<script>\n  import { store } from '../_store/store'\n  import { coordsToPercent } from '../_utils/coordsToPercent'\n\n  export default {\n\n    data: () => ({\n      focus: undefined\n    }),\n    store: () => store,\n    computed: {\n      focusStyle: ({ focus }) => {\n        // Here we do a pure css version instead of using\n        // https://github.com/jonom/jquery-focuspoint#1-calculate-your-images-focus-point\n\n        if (!focus) return 'background-position: center;'\n        return `object-position: ${coordsToPercent(focus.x)}% ${100 - coordsToPercent(focus.y)}%;`\n      }\n    }\n  }\n</script>\n","<div class=\"non-autoplay-gifv  {$largeInlineMedia ? '' : 'non-autoplay-gifv-fixed-size'}\"\n     {style}\n     on:mouseover=\"onMouseOver(event)\"\n     ref:node\n>\n  {#if playing}\n    <AutoplayVideo\n      ariaLabel={label}\n      {poster}\n      {src}\n      {width}\n      {height}\n      {focus}\n      />\n  {:else}\n    <LazyImage\n      alt={label || ''}\n      title={label || ''}\n      src={staticSrc}\n      {blurhash}\n      fallback={oneTransparentPixel}\n      {width}\n      {height}\n      background=\"var(--loading-bg)\"\n      {focus}\n    />\n  {/if}\n  {#if !blurhash}\n    <PlayVideoIcon className={playing ? 'hidden' : ''}/>\n  {/if}\n</div>\n<style>\n  .non-autoplay-gifv {\n    cursor: zoom-in;\n    display: flex;\n    position: relative;\n    margin: 0;\n    padding: 0;\n  }\n\n  .non-autoplay-gifv-fixed-size {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n\n  :global(.non-autoplay-gifv .play-video-icon) {\n    transition: opacity 0.2s linear;\n  }\n</style>\n<script>\n  import { mouseover } from '../_utils/events'\n  import PlayVideoIcon from './PlayVideoIcon.html'\n  import { ONE_TRANSPARENT_PIXEL } from '../_static/media'\n  import LazyImage from './LazyImage.html'\n  import AutoplayVideo from './AutoplayVideo.html'\n\n  export default {\n    methods: {\n      onMouseOver (mouseOver) {\n        this.set({ playing: mouseOver })\n      }\n    },\n    events: {\n      mouseover\n    },\n    data: () => ({\n      oneTransparentPixel: ONE_TRANSPARENT_PIXEL,\n      focus: undefined\n    }),\n    computed: {\n      style: ({ useWidthHeight, width, height }) => (\n        useWidthHeight ? `width: ${width}px; height: ${height}px;` : ''\n      )\n    },\n    components: {\n      PlayVideoIcon,\n      LazyImage,\n      AutoplayVideo\n    }\n  }\n</script>\n","const colorsToUrls = new Map()\nlet canvas\nlet context\n\nexport function convertCssPropertyToDataUrl (prop) {\n  const color = getComputedStyle(document.documentElement).getPropertyValue(prop)\n  let url = colorsToUrls.get(color)\n  if (!url) {\n    if (!canvas) {\n      canvas = document.createElement('canvas')\n      canvas.width = 1\n      canvas.height = 1\n      context = canvas.getContext('2d')\n    }\n    context.fillStyle = color\n    context.rect(0, 0, 1, 1)\n    context.fill()\n    url = canvas.toDataURL()\n    colorsToUrls.set(color, url)\n  }\n  return url\n}\n","{#if !blurhash && (type === 'video' || type === 'audio')}\n    <button id={elementId}\n            type=\"button\"\n            class=\"inline-media play-video-button focus-after {$largeInlineMedia ? '' : 'fixed-size'} {type === 'audio' ? 'play-audio-button' : ''}\"\n            aria-label={videoOrAudioButtonLabel}\n            {tabindex}\n            aria-hidden={ariaHidden}\n            style={inlineMediaStyle}>\n      <PlayVideoIcon />\n      {#if type === 'video'}\n        <LazyImage\n          alt={description}\n          title={description}\n          src={previewUrl}\n          fallback={oneTransparentPixel}\n          {blurhash}\n          width={inlineWidth}\n          height={inlineHeight}\n          background=\"var(--loading-bg)\"\n          {focus}\n        />\n      {/if}\n    </button>\n{:else}\n  <button id={elementId}\n          type=\"button\"\n          class=\"inline-media show-image-button focus-after {$largeInlineMedia ? '' : 'fixed-size'}\"\n          aria-label={imageButtonAriaLabel}\n          title={description}\n          on:mouseover=\"set({mouseover: event})\"\n          style={inlineMediaStyle}\n          {tabindex}\n          aria-hidden={ariaHidden}\n  >\n  {#if type === 'gifv' && $autoplayGifs && !blurhash}\n    <AutoplayVideo\n      ariaLabel={animatedLabel}\n      poster={previewUrl}\n      src={url}\n      width={inlineWidth}\n      height={inlineHeight}\n      {focus}\n    />\n  {:elseif type === 'gifv'}\n    <NonAutoplayGifv\n      class={noNativeWidthHeight ? 'no-native-width-height' : ''}\n      label={animatedLabel}\n      poster={previewUrl}\n      {blurhash}\n      src={url}\n      staticSrc={previewUrl}\n      useWidthHeight={!blurhash}\n      width={inlineWidth}\n      height={inlineHeight}\n      playing={mouseover}\n      {focus}\n    />\n  {:else}\n    <LazyImage\n      alt={description}\n      title={description}\n      src={previewUrl}\n      fallback={oneTransparentPixel}\n      {blurhash}\n      width={inlineWidth}\n      height={inlineHeight}\n      background=\"var(--loading-bg)\"\n      {focus}\n    />\n  {/if}\n</button>\n{/if}\n<style>\n\n  :global(.status-media video, .status-media img) {\n    object-fit: cover;\n  }\n  .play-video-button, .show-image-button {\n    margin: auto;\n    padding: 0;\n    border-radius: 0;\n    border: none;\n    background: none;\n  }\n  .play-audio-button {\n    background: var(--audio-bg);\n  }\n\n  .show-image-button {\n    cursor: zoom-in;\n  }\n\n  .inline-media {\n    position: relative;\n  }\n\n  @media (max-width: 240px) {\n    .inline-media {\n      min-height: 100px; /* TODO: hack for KaiOS, which renders the grouped-images style as 0 height */\n    }\n  }\n</style>\n<script>\n  import { DEFAULT_MEDIA_WIDTH, DEFAULT_MEDIA_HEIGHT, ONE_TRANSPARENT_PIXEL } from '../../_static/media'\n  import { importShowMediaDialog } from '../dialog/asyncDialogs/importShowMediaDialog.js'\n  import { mouseover } from '../../_utils/events'\n  import NonAutoplayGifv from '../NonAutoplayGifv.html'\n  import PlayVideoIcon from '../PlayVideoIcon.html'\n  import { store } from '../../_store/store'\n  import LazyImage from '../LazyImage.html'\n  import AutoplayVideo from '../AutoplayVideo.html'\n  import { registerClickDelegate } from '../../_utils/delegate'\n  import { convertCssPropertyToDataUrl } from '../../_utils/convertCssPropertyToDataUrl'\n  import { formatIntl } from '../../_utils/formatIntl'\n\nexport default {\n    async oncreate () {\n      const { elementId } = this.get()\n      registerClickDelegate(this, elementId, () => this.onClick())\n    },\n    computed: {\n      focus: ({ meta }) => meta && meta.focus,\n      // width/height to show inline\n      inlineWidth: ({ smallWidth, $largeInlineMedia }) => {\n        if (!$largeInlineMedia) {\n          return '100%'\n        }\n        return smallWidth || DEFAULT_MEDIA_WIDTH\n      },\n      inlineHeight: ({ smallHeight, $largeInlineMedia }) => {\n        if (!$largeInlineMedia) {\n          return 'auto'\n        }\n        return smallHeight || DEFAULT_MEDIA_HEIGHT\n      },\n      // width/height to show in a modal\n      modalWidth: ({ originalWidth, smallWidth }) => originalWidth || smallWidth || 0,\n      modalHeight: ({ originalHeight, smallHeight }) => originalHeight || smallHeight || 0,\n      meta: ({ media }) => media.meta,\n      small: ({ meta }) => meta && meta.small,\n      original: ({ meta }) => meta && meta.original,\n      smallWidth: ({ small }) => small && small.width,\n      smallHeight: ({ small }) => small && small.height,\n      originalWidth: ({ original }) => original && original.width,\n      originalHeight: ({ original }) => original && original.height,\n      noNativeWidthHeight: ({ smallWidth, smallHeight }) => typeof smallWidth !== 'number' || typeof smallHeight !== 'number',\n      elementId: ({ media, uuid }) => `media-${uuid}-${media.id}`,\n      description: ({ media }) => media.description || '',\n      previewUrl: ({ media }) => media.preview_url,\n      decodedBlurhash: ({ media }) => media.decodedBlurhash,\n      blurhashToUse: ({ decodedBlurhash, $ignoreBlurhash }) => {\n        if (!$ignoreBlurhash && decodedBlurhash) {\n          return decodedBlurhash\n        }\n        // Convert the var(--loading-bg) variable into a data URL based on a single pixel of color\n        // TODO: this is hacky\n        return convertCssPropertyToDataUrl('--mask-bg')\n      },\n      blurhash: ({ blurhashToUse, showAsSensitive }) => showAsSensitive && blurhashToUse,\n      url: ({ media }) => media.url,\n      type: ({ media }) => media.type,\n      inlineMediaStyle: ({ type, inlineWidth, inlineHeight, blurhash, $largeInlineMedia }) => {\n        if ((type === 'audio') || (blurhash && $largeInlineMedia)) {\n          return ''\n        } else {\n          return `width: ${inlineWidth}px; height: ${inlineHeight}px;`\n        }\n      },\n      tabindex: ({ showAsSensitive }) => showAsSensitive ? '-1' : '0',\n      ariaHidden: ({ showAsSensitive }) => showAsSensitive,\n      imageButtonAriaLabel: ({ type, description }) => (\n        formatIntl([\"Show \",[\"animated\",\"select\",{\"true\":[\"animated\"],\"other\":[]}],\" image: \",[\"description\"]], { animated: type === 'gifv', description })\n      ),\n      videoOrAudioButtonLabel: ({ type, description }) => (\n        formatIntl([\"Play \",[\"audio\",\"select\",{\"true\":[\"audio\"],\"other\":[\"video\"]}],\": \",[\"description\"]], { audio: type === 'audio', description })\n      ),\n      animatedLabel: ({ description }) => (\n        formatIntl([\"Animated image: \",[\"description\"]], { description })\n      )\n    },\n    methods: {\n      onClick () {\n        (async () => {\n          const { mediaAttachments, index } = this.get()\n          const showMediaDialog = await importShowMediaDialog()\n          showMediaDialog(mediaAttachments, index)\n        })()\n        return true\n      }\n    },\n    data: () => ({\n      oneTransparentPixel: ONE_TRANSPARENT_PIXEL,\n      mouseover: undefined\n    }),\n    store: () => store,\n    events: {\n      mouseover\n    },\n    components: {\n      NonAutoplayGifv,\n      PlayVideoIcon,\n      LazyImage,\n      AutoplayVideo\n    }\n  }\n</script>\n","<div class={computedClass}\n     style=\"grid-template-columns: repeat({nCols}, 1fr);\" >\n  {#each mediaAttachments as media, index}\n    <Media {media} {uuid} {mediaAttachments} {index} {showAsSensitive} />\n  {/each}\n</div>\n<style>\n  .status-media {\n    grid-area: media;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    justify-items: center;\n    grid-column-gap: 5px;\n    grid-row-gap: 5px;\n\n    overflow: hidden;\n    margin: 10px 10px 10px 5px;\n  }\n\n  .status-media.grouped-images {\n    grid-area: media-grp;\n    border-radius: 6px;\n  }\n\n  .status-media.grouped-images > :global(.inline-media) {\n      padding-bottom: 56.25%;\n      width: 100%;\n  }\n\n  .status-media.grouped-images.two-cols > :global(.inline-media) {\n      padding-bottom: calc(112.5% + 5px);\n  }\n\n  .status-media.grouped-images.odd-cols > :global(.inline-media:first-child) {\n      grid-row-end: span 2;\n      padding-bottom: calc(112.5% + 5px);\n      background-color: blue;\n  }\n\n  .status-media.not-grouped-images > :global(.inline-media) {\n    width: 100%;\n    min-height: 250px;\n  }\n\n  .status-media.not-grouped-images :global(.inline-media img),\n  .status-media.not-grouped-images :global(.inline-media .lazy-image) {\n    width: 100%;\n    height: 100%;\n  }\n\n  .status-media.status-media-is-sensitive {\n    height: inherit;\n    margin: 0;\n  }\n</style>\n<script>\n  import Media from './Media.html'\n  import { classname } from '../../_utils/classname'\n\n  export default {\n    computed: {\n      computedClass: ({ sensitive, $largeInlineMedia, oddCols, twoCols }) => classname(\n        'status-media',\n        sensitive && 'status-media-is-sensitive',\n        oddCols && 'odd-cols',\n        twoCols && 'two-cols',\n        $largeInlineMedia ? 'not-grouped-images' : 'grouped-images'\n      ),\n      showAsSensitive: ({ sensitive, sensitiveShown }) => {\n        return sensitive ? !sensitiveShown : false\n      },\n      nCols: ({ mediaAttachments, $largeInlineMedia }) => {\n        return (!$largeInlineMedia && mediaAttachments.length > 1) ? 2 : 1\n      },\n      oddCols: ({ mediaAttachments }) => {\n        return (mediaAttachments.length > 1 && (mediaAttachments.length % 2))\n      },\n      twoCols: ({ mediaAttachments }) => {\n        return (mediaAttachments.length === 2)\n      }\n    },\n    components: {\n      Media\n    }\n  }\n</script>\n","{#if sensitive }\n<div class={computedClass} style={customSize}>\n  <div class=\"status-sensitive-inner-div\">\n    {#if sensitiveShown}\n      <button id={elementId}\n              type=\"button\"\n              class=\"status-sensitive-media-button\"\n              aria-label=\"Hide sensitive media\"\n              ref:hideSensitiveMedia\n      >\n        <div class=\"svg-wrapper\">\n          <SvgIcon className=\"status-sensitive-media-svg\"\n                   href=\"#fa-eye-slash\" />\n        </div>\n      </button>\n    {:else}\n      <button id={elementId}\n              type=\"button\"\n              class=\"status-sensitive-media-button\"\n              aria-label=\"Show sensitive media\"\n              ref:showSensitiveMedia\n      >\n\n        <div class=\"status-sensitive-media-warning\">\n          <div class=\"status-sensitive-media-warning-text\">\n            Sensitive content. Click to show.\n          </div>\n        </div>\n        <div class=\"svg-wrapper\">\n          <SvgIcon className=\"status-sensitive-media-svg\" href=\"#fa-eye\" />\n        </div>\n      </button>\n    {/if}\n    <MediaAttachments {mediaAttachments} {sensitive} {sensitiveShown} {uuid} />\n  </div>\n</div>\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"y\" on:pressed=\"toggleSensitiveMedia(false)\"/>\n{/if}\n{:else}\n  <MediaAttachments {mediaAttachments} {sensitive} {sensitiveShown} {uuid} />\n{/if}\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"i\" on:pressed=\"showFirstMedia()\" />\n{/if}\n<style>\n  .status-sensitive-media-container {\n    grid-area: media;\n    width: 100%;\n    margin: 10px 0;\n    position: relative;\n    border-radius: 0;\n    border: none;\n    background: none;\n  }\n\n  .status-sensitive-inner-div {\n    height: 100%;\n  }\n\n  .status-sensitive-media-container.grouped-images .status-sensitive-inner-div {\n    position: relative;\n    width: 100%;\n  }\n\n  .status-sensitive-media-container.grouped-images {\n    grid-area: media-grp;\n  }\n\n  .status-sensitive-media-button {\n    margin: 0;\n    padding: 0;\n    border: none;\n    background: none;\n  }\n\n  .status-sensitive-media-button:hover {\n    background: none;\n  }\n\n  .status-sensitive-media-button:active {\n    background: none;\n  }\n\n  .status-sensitive-media-shown .status-sensitive-media-button {\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    z-index: 90;\n  }\n\n  .status-sensitive-media-hidden .status-sensitive-media-button {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .status-sensitive-media-container.status-sensitive-media-hidden {\n    width: 100%;\n    margin: 10px auto;\n  }\n  .status-sensitive-media-container.status-sensitive-media-hidden.not-grouped-images {\n      height: 250px;\n  }\n\n  .status-sensitive-media-container .status-sensitive-media-warning {\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--deemphasized-text-color);\n    z-index: 60;\n    padding: 0 10px;\n    position: absolute;\n  }\n\n  .status-sensitive-media-container .status-sensitive-media-warning .status-sensitive-media-warning-text {\n    background: var(--mask-bg);\n    padding: 10px;\n    border-radius: 6px;\n    color: var(--blurhash-sensitive-text-color);\n  }\n\n  .status-sensitive-media-container .svg-wrapper {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    z-index: 40;\n    pointer-events: none;\n    background: var(--mask-bg);\n  }\n  .status-sensitive-media-hidden .svg-wrapper {\n    position: absolute;\n    background: none;\n    top: 5px;\n    left: 5px;\n    right: 0;\n    bottom: 0;\n  }\n\n  .status-sensitive-media-container.grouped-images .svg-wrapper {\n    border-radius: 6px;\n  }\n  .status-sensitive-media-container.status-sensitive-media-shown .svg-wrapper {\n    background: none;\n  }\n  :global(.status-sensitive-media-svg) {\n    width: 24px;\n    height: 24px;\n    fill: var(--mask-svg-fill);\n    border-radius: 2px;\n    background: var(--mask-opaque-bg);\n    margin: 5px;\n    padding: 6px 10px;\n  }\n  :global(.status-sensitive-media-container.status-sensitive-media-hidden .status-sensitive-media-svg) {\n    fill: var(--blurhash-sensitive-text-color);\n    background: var(--mask-bg);\n  }\n</style>\n<script>\n  import MediaAttachments from './MediaAttachments.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store'\n  import { registerClickDelegate } from '../../_utils/delegate'\n  import { classname } from '../../_utils/classname'\n  import { importShowMediaDialog } from '../dialog/asyncDialogs/importShowMediaDialog'\n\n  export default {\n    oncreate () {\n      const { elementId } = this.get()\n      registerClickDelegate(this, elementId, () => this.toggleSensitiveMedia(true))\n    },\n    components: {\n      MediaAttachments,\n      Shortcut,\n      SvgIcon\n    },\n    store: () => store,\n    computed: {\n      computedClass: ({ sensitiveShown, oddCols, twoCols, $largeInlineMedia }) => classname(\n        'status-sensitive-media-container',\n        sensitiveShown ? 'status-sensitive-media-shown' : 'status-sensitive-media-hidden',\n        oddCols && 'odd-cols',\n        twoCols && 'two-cols',\n        $largeInlineMedia ? 'not-grouped-images' : 'grouped-images'\n      ),\n      mediaAttachments: ({ originalStatus }) => originalStatus.media_attachments,\n      sensitiveShown: ({ $sensitivesShown, uuid }) => !!$sensitivesShown[uuid],\n      sensitive: ({ originalStatus, $markMediaAsSensitive, $neverMarkMediaAsSensitive }) => (\n        !$neverMarkMediaAsSensitive && ($markMediaAsSensitive || originalStatus.sensitive)\n      ),\n      elementId: ({ uuid }) => `sensitive-${uuid}`,\n      customSize: ({ $largeInlineMedia, mediaAttachments }) => {\n        if ($largeInlineMedia || !mediaAttachments || mediaAttachments.length < 5) {\n          return ''\n        }\n        return `padding-bottom: ${Math.ceil(mediaAttachments.length / 2) * 29}%;`\n      },\n      nCols: ({ mediaAttachments, $largeInlineMedia }) => {\n        return (!$largeInlineMedia && mediaAttachments.length > 1) ? 2 : 1\n      },\n      oddCols: ({ mediaAttachments }) => {\n        return (mediaAttachments.length > 1 && (mediaAttachments.length % 2))\n      },\n      twoCols: ({ mediaAttachments }) => {\n        return (mediaAttachments.length === 2)\n      }\n    },\n    methods: {\n      toggleSensitiveMedia (changeFocus) {\n        const { uuid } = this.get()\n        const { sensitivesShown } = this.store.get()\n        sensitivesShown[uuid] = !sensitivesShown[uuid]\n        this.store.set({ sensitivesShown })\n        this.fire('recalculateHeight')\n        // Only change focus for clicks, not for hotkeys. It's weird if, when the entire toot\n        // is focused and you press \"y\", that the focus changes to the sensitive media button.\n        if (changeFocus) {\n          requestAnimationFrame(() => {\n            const element = this.refs.hideSensitiveMedia || this.refs.showSensitiveMedia\n            try {\n              element.focus({ preventScroll: true })\n            } catch (e) {\n              console.error('ignored focus error', e)\n            }\n          })\n        }\n        return true\n      },\n      async showFirstMedia () {\n        const { mediaAttachments } = this.get()\n        const showMediaDialog = await importShowMediaDialog()\n        showMediaDialog(mediaAttachments, 0)\n      }\n    }\n  }\n</script>\n","export function urlIsCrossOrigin (href) {\n  try {\n    return new URL(href, location.href).origin !== location.origin\n  } catch (e) {\n    console.error('Ignoring malformed URL', href)\n    return true\n  }\n}\n","<div class={computedClass} ref:node>\n    {@html massagedContent}\n</div>\n<style>\n  .status-content {\n    margin: 10px 10px 10px 5px;\n    grid-area: content;\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: pre-wrap;\n    font-size: 0.9em;\n    display: none;\n  }\n\n  .status-content.status-in-own-thread {\n    font-size: 1.3em;\n    margin: 20px 10px 20px 5px;\n  }\n\n  .status-content.shown {\n    display: block;\n  }\n\n  :global(.status-content li) {\n    font-size: 1.3em;\n  }\n\n  :global(\n      .status-content p,\n      .status-content blockquote,\n      .status-content ul,\n      .status-content ol) {\n    margin: 0 0 20px;\n  }\n\n  :global(\n      .status-content p:first-child,\n      .status-content blockquote:first-child,\n      .status-content ul:first-child,\n      .status-content ol:first-child) {\n    margin: 0 0 20px;\n  }\n\n  :global(\n      .status-content p:last-child,\n      .status-content blockquote:last-child,\n      .status-content ul:last-child,\n      .status-content ol:last-child) {\n    margin: 0;\n  }\n\n  :global(.status-content blockquote) {\n    padding-left: 1.5rem;\n    border-left: 5px solid var(--body-bg);\n    color: var(--very-deemphasized-text-color);\n    font-style: italic;\n  }\n\n  :global(.status-content ul, .status-content ol) {\n    padding-left: 2rem;\n  }\n\n  .status-content.status-in-notification {\n    color: var(--very-deemphasized-text-color);\n  }\n  :global(.status-content.status-in-notification a, .status-content.status-in-notification a:hover) {\n    color: var(--very-deemphasized-link-color);\n  }\n\n  :global(.status-content .invisible) {\n    /* copied from Mastodon */\n    font-size: 0;\n    line-height: 0;\n    display: inline-block;\n    width: 0;\n    height: 0;\n    position: absolute;\n  }\n\n  :global(.underline-links .status-content a) {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 240px) {\n    :global(\n      .status-content p:last-child,\n      .status-content blockquote:last-child,\n      .status-content ul:last-child,\n      .status-content ol:last-child) {\n      margin: 0 0 10px; /* looks better on KaiOS with some spacing here */\n    }\n  }\n\n</style>\n<script>\n  import { mark, stop } from '../../_utils/marks'\n  import { store } from '../../_store/store'\n  import { classname } from '../../_utils/classname'\n  import { massageUserText } from '../../_utils/massageUserText'\n  import { urlIsCrossOrigin } from '../../_utils/urlIsCrossOrigin'\n\n  export default {\n    oncreate () {\n      this.hydrateContent()\n    },\n    store: () => store,\n    computed: {\n      computedClass: ({ isStatusInOwnThread, isStatusInNotification, shown }) => {\n        return classname(\n          'status-content',\n          isStatusInOwnThread && 'status-in-own-thread',\n          isStatusInNotification && 'status-in-notification',\n          shown && 'shown'\n        )\n      },\n      content: ({ originalStatus }) => (originalStatus.content || ''),\n      massagedContent: ({ content, originalStatusEmojis, $autoplayGifs }) => (\n        massageUserText(content, originalStatusEmojis, $autoplayGifs)\n      )\n    },\n    methods: {\n      hydrateContent () {\n        mark('hydrateContent')\n        const node = this.refs.node\n        const { originalStatus, uuid } = this.get()\n        const { mentions, tags } = originalStatus\n        let count = 0\n        const anchors = Array.from(node.getElementsByTagName('A'))\n\n        for (const anchor of anchors) {\n          // hydrate hashtag\n          if (tags && anchor.classList.contains('hashtag')) {\n            for (const tag of tags) {\n              if (anchor.getAttribute('href').toLowerCase().endsWith(`/${tag.name.toLowerCase()}`)) {\n                anchor.setAttribute('href', `/tags/${tag.name}`)\n                anchor.setAttribute('id', `status-content-link-${uuid}-${++count}`)\n                anchor.removeAttribute('target')\n                anchor.removeAttribute('rel')\n              }\n            }\n          // hydrate mention\n          } else if (mentions && anchor.classList.contains('mention')) {\n            for (const mention of mentions) {\n              if (anchor.getAttribute('href') === mention.url) {\n                anchor.setAttribute('href', `/accounts/${mention.id}`)\n                anchor.setAttribute('title', `@${mention.acct}`)\n                anchor.setAttribute('id', `status-content-link-${uuid}-${++count}`)\n                anchor.removeAttribute('target')\n                anchor.removeAttribute('rel')\n              }\n            }\n          }\n          // hydrate external links\n          const href = anchor.getAttribute('href')\n          if (urlIsCrossOrigin(href)) {\n            anchor.setAttribute('title', href)\n            anchor.setAttribute('target', '_blank')\n            anchor.setAttribute('rel', 'nofollow noopener')\n          }\n        }\n        stop('hydrateContent')\n      }\n    }\n  }\n</script>\n","<div class=\"status-spoiler {isStatusInNotification ? 'status-in-notification' : ''} {isStatusInOwnThread ? 'status-in-own-thread' : ''}\">\n  <p>{@html massagedSpoilerText}</p>\n</div>\n<div class=\"status-spoiler-button {isStatusInOwnThread ? 'status-in-own-thread' : ''}\">\n  <button id={elementId} type=\"button\" >\n    {spoilerShown ? \"Show less\" : \"Show more\"}\n  </button>\n</div>\n{#if enableShortcuts}\n<Shortcut scope={shortcutScope} key=\"x\" on:pressed=\"toggleSpoilers()\"/>\n{/if}\n<style>\n  .status-spoiler {\n    grid-area: spoiler;\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: pre-wrap;\n    font-size: 0.9em;\n    margin: 10px 5px;\n  }\n\n  .status-spoiler.status-in-own-thread {\n    font-size: 1.3em;\n    margin: 20px 5px 10px;\n  }\n\n  .status-spoiler.status-in-notification {\n    color: var(--very-deemphasized-text-color);\n  }\n\n  .status-spoiler-button {\n    grid-area: spoiler-btn;\n    margin: 10px 5px;\n  }\n\n  .status-spoiler-button.status-in-own-thread {\n  }\n\n  .status-spoiler-button button {\n    padding: 5px 10px;\n    font-size: 1.1em;\n  }\n\n  :global(.underline-links .status-spoiler a) {\n    text-decoration: underline;\n  }\n\n</style>\n<script>\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store'\n  import { registerClickDelegate } from '../../_utils/delegate'\n  import { mark, stop } from '../../_utils/marks'\n  import { emojifyText } from '../../_utils/emojifyText'\n  import { on } from '../../_utils/eventBus'\n  import escapeHtml from 'escape-html'\n\n  export default {\n    oncreate () {\n      this.toggleSpoilers = this.toggleSpoilers.bind(this)\n      const { elementId } = this.get()\n      registerClickDelegate(this, elementId, () => this.toggleSpoilers())\n      on('toggleAllSpoilers', this, this.toggleSpoilers)\n    },\n    store: () => store,\n    components: {\n      Shortcut\n    },\n    computed: {\n      massagedSpoilerText: ({ spoilerText, originalStatusEmojis, $autoplayGifs }) => {\n        spoilerText = escapeHtml(spoilerText)\n        return emojifyText(spoilerText, originalStatusEmojis, $autoplayGifs)\n      },\n      elementId: ({ uuid }) => `spoiler-${uuid}`\n    },\n    methods: {\n      toggleSpoilers (shown) {\n        const { uuid } = this.get()\n        const { spoilersShown } = this.store.get()\n        spoilersShown[uuid] = typeof shown === 'undefined' ? !spoilersShown[uuid] : !!shown\n        this.store.set({ spoilersShown })\n        requestAnimationFrame(() => {\n          mark('clickSpoilerButton')\n          this.fire('recalculateHeight')\n          stop('clickSpoilerButton')\n        })\n        return true\n      }\n    }\n  }\n</script>\n","<div class=\"status-article-compose-box\">\n  <ComposeBox realm={originalStatusId}\n              autoFocus=\"true\"\n              hideBottomBorder=\"true\"\n              isReply=\"true\"\n              replyVisibility={visibility}\n              replySpoiler={spoilerText}\n              inReplyToUuid={uuid}\n  />\n</div>\n<style>\n  .status-article-compose-box {\n    grid-area: compose;\n    max-width: 100%;\n  }\n</style>\n<script>\n  import ComposeBox from '../compose/ComposeBox.html'\n  import { store } from '../../_store/store'\n  import debounce from 'lodash-es/debounce'\n  import throttle from 'lodash-es/throttle'\n  import { on } from '../../_utils/eventBus'\n  import { observe } from 'svelte-extras'\n\n  const DEBOUNCE_DELAY = 400\n  const THROTTLE_DELAY = 150\n\n  export default {\n    oncreate () {\n      on('postedStatus', this, this.onPostedStatus)\n      this.setupRecalculateHeightListener()\n    },\n    store: () => store,\n    computed: {\n      composeData: ({ $currentComposeData, originalStatusId }) => $currentComposeData[originalStatusId] || {}\n    },\n    methods: {\n      observe,\n      onPostedStatus (realm) {\n        const { originalStatusId } = this.get()\n        if (realm !== originalStatusId) {\n          return\n        }\n        requestAnimationFrame(() => {\n          const { uuid } = this.get()\n          const { repliesShown } = this.store.get()\n          repliesShown[uuid] = false\n          this.store.set({ repliesShown })\n          this.fire('recalculateHeight')\n        })\n      },\n      setupRecalculateHeightListener () {\n        const recalc = () => requestAnimationFrame(() => this.fire('recalculateHeight'))\n        // debounce AND throttle due to 333ms content warning animation\n        const debounced = debounce(recalc, DEBOUNCE_DELAY)\n        const throttled = throttle(() => {\n          debounced()\n          recalc()\n        }, THROTTLE_DELAY, {\n          leading: true,\n          trailing: true\n        })\n        this.observe('composeData', throttled)\n      }\n    },\n    components: {\n      ComposeBox\n    }\n  }\n</script>\n","{#if mentions.length}\n  <div class=\"status-mentions {isStatusInOwnThread ? 'status-in-own-thread' : ''}\">\n    <p>\n      {#each mentions as mention, i}\n        {#if i > 0}\n          <!-- empty space -->\n          &nbsp;\n          <!-- empty space -->\n        {/if}\n        <a id=\"status-mention-link-{uuid}-{mention.id}\"\n           href=\"/accounts/{mention.id}\"\n           rel=\"prefetch\"\n           title=\"@{mention.acct}\"\n        >\n          @{mention.username}\n        </a>\n      {/each}\n    </p>\n  </div>\n{/if}\n<style>\n  .status-mentions {\n    grid-area: mentions;\n    margin: 10px 0 10px 5px;\n    font-size: 0.9em;\n  }\n\n  .status-mentions.status-in-own-thread {\n    font-size: 1.3em;\n    margin: 20px 10px 20px 5px;\n  }\n\n  :global(.underline-links .status-mentions a) {\n    text-decoration: underline;\n  }\n\n</style>\n<script>\n  export default {\n    computed: {\n      mentions: ({ originalStatus }) => originalStatus.mentions || []\n    }\n  }\n</script>\n","// adapted from https://unpkg.com/timeago.js@4.0.0-beta.1/lib/index.js\nimport { LOCALE } from '../../_static/intl'\nimport { thunk } from '../../_utils/thunk'\n\nconst IndexMapEn = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year']\nconst SEC_ARRAY = [60, 60, 24, 7, 365 / 7 / 12, 12]\nconst intlFormat = thunk(() => new Intl.RelativeTimeFormat(LOCALE))\n\nfunction formatRelativeTime (number, index) {\n  if (index === 0) {\n    if (process.env.NODE_ENV === 'test') {\n      return require('../../../intl/en-US').default.justNow // only used in mocha tests\n    }\n    return \"just now\"\n  }\n  const unit = IndexMapEn[Math.floor(index / 2)]\n\n  return intlFormat().format(number, unit)\n}\n\nfunction formatDiff (seconds) {\n  let i = 0\n\n  const pastDate = seconds < 0\n\n  // timein or timeago\n\n  seconds = Math.abs(seconds)\n\n  for (; seconds >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n    seconds /= SEC_ARRAY[i]\n  }\n  seconds = Math.floor(seconds)\n  i *= 2\n\n  if (seconds > (i === 0 ? 9 : 1)) {\n    i += 1\n  }\n  return formatRelativeTime(pastDate ? -seconds : seconds, i)\n}\n\nexport function format (milliseconds) {\n  return formatDiff(milliseconds / 1000)\n}\n","import { format } from '../_thirdparty/timeago/timeago'\nimport { mark, stop } from '../_utils/marks'\n\n// Format a date in the past\nexport function formatTimeagoDate (date, now) {\n  mark('formatTimeagoDate')\n  // use Math.min() to avoid things like \"in 10 seconds\" when the timestamps are slightly off\n  const res = format(Math.min(0, date - now))\n  stop('formatTimeagoDate')\n  return res\n}\n\n// Format a date in the future\nexport function formatTimeagoFutureDate (date, now) {\n  mark('formatTimeagoFutureDate')\n  // use Math.max() for same reason as above\n  const res = format(Math.max(0, date - now))\n  stop('formatTimeagoFutureDate')\n  return res\n}\n","import { getPoll as getPollApi, voteOnPoll as voteOnPollApi } from '../_api/polls'\nimport { store } from '../_store/store'\nimport { toast } from '../_components/toast/toast'\nimport { formatIntl } from '../_utils/formatIntl'\n\nexport async function getPoll (pollId) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    const poll = await getPollApi(currentInstance, accessToken, pollId)\n    return poll\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(formatIntl([\"Unable to refresh poll: \",[\"error\"]], { error: (e.message || '') }))\n  }\n}\n\nexport async function voteOnPoll (pollId, choices) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    const poll = await voteOnPollApi(currentInstance, accessToken, pollId, choices.map(_ => _.toString()))\n    return poll\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(formatIntl([\"Unable to vote in poll: \",[\"error\"]], { error: (e.message || '') }))\n  }\n}\n","import { get, post, DEFAULT_TIMEOUT, WRITE_TIMEOUT } from '../_utils/ajax'\nimport { auth, basename } from './utils'\n\nexport async function getPoll (instanceName, accessToken, pollId) {\n  const url = `${basename(instanceName)}/api/v1/polls/${pollId}`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport async function voteOnPoll (instanceName, accessToken, pollId, choices) {\n  const url = `${basename(instanceName)}/api/v1/polls/${pollId}/votes`\n  return post(url, { choices }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","<div class={computedClass} aria-busy={loading} >\n  {#if voted || expired }\n    <ul class=\"poll-choices\" aria-label=\"Poll results\">\n      {#each options as option}\n        <li class=\"poll-choice option\">\n          <div class=\"option-text\">\n            <strong>{option.share}%</strong> <span>{@html cleanTitle(option.title)}</span>\n          </div>\n          <svg aria-hidden=\"true\">\n            <line x1=\"0\" y1=\"0\" x2=\"{option.share}%\" y2=\"0\" />\n          </svg>\n        </li>\n      {/each}\n    </ul>\n  {:else}\n    <form class=\"poll-form\" aria-label=\"Vote on poll\" on:submit=\"onSubmit(event)\" ref:form>\n      <ul class=\"poll-choices\" aria-label=\"Poll choices\">\n        {#each options as option, i}\n          <li class=\"poll-choice poll-form-option\">\n            <label>\n              <input type=\"{multiple ? 'checkbox' : 'radio'}\"\n                     name=\"poll-choice-{uuid}\"\n                     value=\"{i}\"\n                     on:change=\"onChange()\"\n              >\n              <span>{@html cleanTitle(option.title)}</span>\n            </label>\n          </li>\n        {/each}\n      </ul>\n      <button disabled={formDisabled} type=\"submit\">Vote</button>\n    </form>\n  {/if}\n  <ul class=\"poll-details\" aria-label=\"Poll details\">\n    <li class=\"poll-stat {notification ? 'is-notification' : ''}\">\n      <SvgIcon className=\"poll-icon\" href=\"#fa-bar-chart\" />\n      <span class=\"poll-stat-text\">{votesText}</span>\n    </li>\n    <li class=\"poll-stat {notification ? 'is-notification' : ''}\">\n      <SvgIcon className=\"poll-icon\" href=\"#fa-clock\" />\n      <span class=\"poll-stat-text poll-stat-expiry\">\n        <span class=\"{useNarrowSize ? 'sr-only' : ''}\">{expiryText}</span>\n        <time datetime={expiresAt} title={expiresAtAbsoluteFormatted}>\n          {expiresAtTimeagoFormatted}\n        </time>\n      </span>\n    </li>\n    <li class=\"poll-stat {notification ? 'is-notification' : ''} {expired ? 'poll-expired' : ''}\">\n      <button id={refreshElementId}\n              class=\"focus-fix\"\n              aria-label=\"Refresh\">\n        <SvgIcon className=\"poll-icon\" href=\"#fa-refresh\" />\n        <span class=\"poll-stat-text poll-stat-text-refresh\" aria-hidden=\"true\">\n          Refresh\n        </span>\n      </button>\n    </li>\n  </ul>\n</div>\n<style>\n  .poll {\n    grid-area: poll;\n    margin: 10px 10px 10px 5px;\n    padding: 20px;\n    border: 1px solid var(--main-border);\n    border-radius: 2px;\n    transition: opacity 0.2s linear;\n    display: none;\n  }\n\n  .poll.shown {\n    display: block;\n  }\n\n  .poll.status-in-own-thread {\n    padding: 20px;\n  }\n\n  .poll.poll-loading {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  ul.poll-choices {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li.poll-choice {\n    margin: 10px 0;\n    padding: 0;\n  }\n\n  li.poll-choice:first-child {\n    margin-top: 0;\n  }\n\n  .option {\n    margin: 0 0 10px 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    stroke: var(--svg-fill);\n    stroke-width: 10px;\n  }\n\n  .option-text {\n    word-wrap: break-word;\n    white-space: pre-wrap;\n    font-size: 1.1em;\n  }\n\n  svg {\n    height: 10px;\n    width: 100%;\n    margin-top: 5px;\n  }\n\n  .status-in-notification .option-text {\n    color: var(--very-deemphasized-text-color);\n  }\n\n  .status-in-notification svg {\n    opacity: 0.5;\n  }\n\n  .status-in-own-thread .option-text {\n    font-size: 1.2em;\n  }\n\n  ul.poll-details {\n    display: grid;\n    grid-template-columns: max-content minmax(0, max-content) max-content;\n    grid-gap: 20px;\n    align-items: center;\n    justify-content: left;\n    margin: 10px 0 0 0;\n    padding: 0;\n    list-style: none;\n    overflow-x: hidden;\n  }\n\n  .poll-stat button {\n    /* reset button styles */\n    background: none;\n    box-shadow: none;\n    border: none;\n    border-spacing: 0;\n    margin: 0;\n    padding: 0;\n    font-size: inherit;\n    font-weight: normal;\n    text-align: left;\n    text-decoration: none;\n    text-indent: 0;\n    display: flex;\n    align-items: center;\n  }\n\n  .poll-stat button:hover {\n    text-decoration: underline;\n  }\n\n  li.poll-stat {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    color: var(--deemphasized-text-color);\n    padding: 0;\n    margin: 0;\n  }\n\n  .poll-stat.is-notification, .poll-stat.is-notification .poll-stat-text {\n    color: var(--very-deemphasized-text-color);\n  }\n\n  :global(.poll-stat.is-notification .poll-icon) {\n    fill: var(--very-deemphasized-text-color);\n  }\n\n  .poll-stat.poll-expired {\n    display: none;\n  }\n\n  .poll-stat-text {\n    margin-left: 5px;\n    color: var(--deemphasized-text-color);\n  }\n\n  .poll-stat-expiry {\n    word-wrap: break-word;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  :global(.poll-icon) {\n    fill: var(--deemphasized-text-color);\n    width: 18px;\n    height: 18px;\n    min-width: 18px;\n  }\n\n  .poll-form-option {\n    padding-bottom: 10px;\n  }\n\n  .poll-form label span {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    word-break: break-word;\n    white-space: pre-wrap;\n    padding-left: 5px;\n  }\n\n  @media (max-width: 479px) {\n    .poll {\n      padding: 10px 5px;\n    }\n    .poll.status-in-own-thread {\n      padding: 10px;\n    }\n    ul.poll-details {\n      grid-gap: 5px;\n      justify-content: space-between;\n    }\n  }\n\n  @media (max-width: 320px) {\n    .poll-stat-text-refresh {\n      display: none; /* takes up too much space on small devices */\n    }\n    ul.poll-details {\n      grid-gap: 2px;\n    }\n    .poll-stat-text {\n      margin-left: 2px;\n    }\n    li.poll-choice {\n      margin: 5px 0;\n    }\n  }\n</style>\n<script>\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store'\n  import { formatTimeagoFutureDate, formatTimeagoDate } from '../../_intl/formatTimeagoDate'\n  import { absoluteDateFormatter } from '../../_utils/formatters'\n  import { registerClickDelegate } from '../../_utils/delegate'\n  import { classname } from '../../_utils/classname'\n  import { getPoll, voteOnPoll } from '../../_actions/polls'\n  import escapeHtml from 'escape-html'\n  import { emojifyText } from '../../_utils/emojifyText'\n  import { formatIntl } from '../../_utils/formatIntl'\n\n  const REFRESH_MIN_DELAY = 1000\n\n  async function doAsyncActionWithDelay (func) {\n    const start = Date.now()\n    const res = await func()\n    const timeElapsed = Date.now() - start\n    if (timeElapsed < REFRESH_MIN_DELAY) {\n      // If less than five seconds, then continue to show the loading animation\n      // so it's clear that something happened.\n      await new Promise(resolve => setTimeout(resolve, REFRESH_MIN_DELAY - timeElapsed))\n    }\n    return res\n  }\n\n  function getChoices (form, options) {\n    const res = []\n    for (let i = 0; i < options.length; i++) {\n      if (form.elements[i].checked) {\n        res.push(i)\n      }\n    }\n    return res\n  }\n\n  export default {\n    oncreate () {\n      this.onRefreshClick = this.onRefreshClick.bind(this)\n      const { refreshElementId } = this.get()\n      registerClickDelegate(this, refreshElementId, this.onRefreshClick)\n    },\n    data: () => ({\n      loading: false,\n      choices: []\n    }),\n    store: () => store,\n    computed: {\n      pollId: ({ originalStatus }) => originalStatus.poll.id,\n      poll: ({ originalStatus, $polls, pollId }) => $polls[pollId] || originalStatus.poll,\n      options: ({ poll, originalStatusEmojis, $autoplayGifs }) => (\n        poll.options.map(({ title, votes_count: votesCount }) => ({\n          title: emojifyText(escapeHtml(title), originalStatusEmojis, $autoplayGifs),\n          share: poll.votes_count ? Math.round(votesCount / poll.votes_count * 100) : 0\n        }))\n      ),\n      votesCount: ({ poll }) => poll.votes_count,\n      voted: ({ poll }) => poll.voted,\n      multiple: ({ poll }) => poll.multiple,\n      expired: ({ poll }) => poll.expired,\n      expiresAt: ({ poll }) => poll.expires_at,\n      expiresAtTS: ({ expiresAt }) => new Date(expiresAt).getTime(),\n      expiresAtTimeagoFormatted: ({ expiresAtTS, expired, $now }) => (\n        expired ? formatTimeagoDate(expiresAtTS, $now) : formatTimeagoFutureDate(expiresAtTS, $now)\n      ),\n      expiresAtAbsoluteFormatted: ({ expiresAtTS }) => absoluteDateFormatter().format(expiresAtTS),\n      expiryText: ({ expired }) => expired ? \"Ended\" : \"Ends\",\n      refreshElementId: ({ uuid }) => `poll-refresh-${uuid}`,\n      useNarrowSize: ({ $isMobileSize, expired, isStatusInOwnThread }) => (\n        !isStatusInOwnThread && $isMobileSize && !expired\n      ),\n      formDisabled: ({ choices }) => !choices.length,\n      votesText: ({ votesCount }) => (\n        formatIntl([[\"count\",\"plural\",0,{\"one\":[\"1 vote\"],\"other\":[[\"count\"],\" votes\"]}]], { count: votesCount })\n      ),\n      computedClass: ({ isStatusInNotification, isStatusInOwnThread, loading, shown }) => (\n        classname(\n          'poll',\n          isStatusInNotification && 'status-in-notification',\n          isStatusInOwnThread && 'status-in-own-thread',\n          loading && 'poll-loading',\n          shown && 'shown'\n        )\n      )\n    },\n    methods: {\n      onRefreshClick () {\n        (async () => {\n          const { pollId } = this.get()\n          this.set({ loading: true })\n          try {\n            const poll = await doAsyncActionWithDelay(() => getPoll(pollId))\n            if (poll) {\n              const { polls } = this.store.get()\n              polls[pollId] = poll\n              this.store.set({ polls })\n            }\n          } finally {\n            this.set({ loading: false })\n          }\n        })()\n        return true\n      },\n      async onSubmit (e) {\n        e.preventDefault()\n        e.stopPropagation()\n        const { pollId, options, formDisabled } = this.get()\n        if (formDisabled) {\n          return\n        }\n        const choices = getChoices(this.refs.form, options)\n        this.set({ loading: true })\n        try {\n          const poll = await doAsyncActionWithDelay(() => voteOnPoll(pollId, choices))\n          if (poll) {\n            const { polls } = this.store.get()\n            polls[pollId] = poll\n            this.store.set({ polls })\n          }\n        } finally {\n          this.set({ loading: false })\n        }\n      },\n      onChange () {\n        const { options } = this.get()\n        const choices = getChoices(this.refs.form, options)\n        this.set({ choices: choices })\n      }\n    },\n    helpers: {\n      cleanTitle (title) {\n        // Remove newlines and tabs.\n        // Mastodon UI doesn't care because in CSS it's formatted to be single-line, but we care\n        // if people somehow insert newlines, because it can really mess up the formatting.\n        return (title && title.replace(/[\\n\\t]+/g, ' ')) || ''\n      }\n    },\n    components: {\n      SvgIcon\n    }\n  }\n</script>\n","// Check if some condition applies for a node or any of its ancestors,\n// stopping at an element that returns true for the given stopFunc. Returns\n// false if none match\nexport function checkDomAncestors (node, checkFunc, stopFunc) {\n  let thisNode = node\n  while (thisNode) {\n    if (stopFunc(thisNode)) {\n      break\n    }\n    if (checkFunc(thisNode)) {\n      return true\n    }\n    thisNode = thisNode.parentElement\n  }\n  return false\n}\n","import { getAccountAccessibleName } from './getAccountAccessibleName'\nimport { POST_PRIVACY_OPTIONS } from '../_static/statuses'\nimport { formatIntl } from '../_utils/formatIntl'\n\nfunction getNotificationText (notification, omitEmojiInDisplayNames) {\n  if (!notification) {\n    return\n  }\n  const notificationAccountDisplayName = getAccountAccessibleName(notification.account, omitEmojiInDisplayNames)\n  if (notification.type === 'reblog') {\n    return formatIntl([[\"account\"],\" boosted your toot\"], { account: notificationAccountDisplayName })\n  } else if (notification.type === 'favourite') {\n    return formatIntl([[\"account\"],\" favorited your toot\"], { account: notificationAccountDisplayName })\n  }\n}\n\nfunction getPrivacyText (visibility) {\n  for (const option of POST_PRIVACY_OPTIONS) {\n    if (option.key === visibility) {\n      return option.label\n    }\n  }\n}\n\nfunction getReblogText (reblog, account, omitEmojiInDisplayNames) {\n  if (!reblog) {\n    return\n  }\n  const accountDisplayName = getAccountAccessibleName(account, omitEmojiInDisplayNames)\n  return formatIntl([\"Boosted by \",[\"account\"]], { account: accountDisplayName })\n}\n\nfunction cleanupText (text) {\n  return text.replace(/\\s+/g, ' ').trim()\n}\n\nexport function getAccessibleLabelForStatus (originalAccount, account, plainTextContent,\n  shortInlineFormattedDate, spoilerText, showContent,\n  reblog, notification, visibility, omitEmojiInDisplayNames,\n  disableLongAriaLabels, showMedia, showPoll) {\n  const originalAccountDisplayName = getAccountAccessibleName(originalAccount, omitEmojiInDisplayNames)\n  const contentTextToShow = (showContent || !spoilerText)\n    ? cleanupText(plainTextContent)\n    : formatIntl([\"Content warning: \",[\"spoiler\"]], { spoiler: cleanupText(spoilerText) })\n  const mediaTextToShow = showMedia && \"has media\"\n  const pollTextToShow = showPoll && \"has poll\"\n  const privacyText = getPrivacyText(visibility)\n\n  if (disableLongAriaLabels) {\n    // Long text can crash NVDA; allow users to shorten it like we had it before.\n    // https://github.com/nolanlawson/pinafore/issues/694\n    return formatIntl([[\"privacy\"],\" toot by \",[\"account\"]], { privacy: privacyText, account: originalAccountDisplayName })\n  }\n\n  const values = [\n    getNotificationText(notification, omitEmojiInDisplayNames),\n    originalAccountDisplayName,\n    contentTextToShow,\n    mediaTextToShow,\n    pollTextToShow,\n    shortInlineFormattedDate,\n    `@${originalAccount.acct}`,\n    privacyText,\n    getReblogText(reblog, account, omitEmojiInDisplayNames)\n  ].filter(Boolean)\n\n  return values.join(', ')\n}\n","<article id={elementId}\n         class={className}\n         tabindex=\"0\"\n         aria-posinset={index + 1}\n         aria-setsize={length}\n         aria-label={ariaLabel}\n         on:recalculateHeight\n         ref:article\n>\n  {#if showHeader}\n    <StatusHeader {...params} />\n  {/if}\n  <StatusAuthorName {...params} />\n  <StatusAuthorHandle {...params} />\n  {#if !isStatusInOwnThread}\n    <StatusRelativeDate {...params} {...timestampParams} />\n  {/if}\n  <StatusSidebar {...params} />\n  {#if spoilerText}\n    <StatusSpoiler {...params} {spoilerShown} on:recalculateHeight />\n  {/if}\n  {#if !showContent}\n    <StatusMentions {...params} />\n  {/if}\n  {#if content && (showContent || preloadHiddenContent)}\n    <StatusContent {...params} shown={showContent}/>\n  {/if}\n  {#if showCard }\n    <StatusCard {...params} />\n  {/if}\n  {#if showMedia }\n    <StatusMediaAttachments {...params} on:recalculateHeight />\n  {/if}\n  {#if showPoll && (showContent || preloadHiddenContent)}\n    <StatusPoll {...params} shown={showContent} />\n  {/if}\n  {#if isStatusInOwnThread}\n    <StatusDetails {...params} {...timestampParams} />\n  {/if}\n  <StatusToolbar {...params} {replyShown} on:recalculateHeight />\n  {#if replyShown}\n    <StatusComposeBox {...params} on:recalculateHeight />\n  {/if}\n</article>\n{#if enableShortcuts}\n  <Shortcut scope={shortcutScope} key=\"o\" on:pressed=\"open()\" />\n  <Shortcut scope={shortcutScope} key=\"p\" on:pressed=\"openAuthorProfile()\" />\n  <Shortcut scope={shortcutScope} key=\"m\" on:pressed=\"mentionAuthor()\" />\n{/if}\n\n<style>\n  .status-article {\n    padding: var(--status-pad-v) var(--status-pad-h);\n    display: grid;\n    grid-template-areas:\n        \"header  header       header        header\"\n        \"sidebar author-name  author-handle relative-date\"\n        \"sidebar spoiler      spoiler       spoiler\"\n        \"sidebar spoiler-btn  spoiler-btn   spoiler-btn\"\n        \"sidebar mentions     mentions      mentions\"\n        \"sidebar content      content       content\"\n        \"sidebar card         card          card\"\n        \"sidebar media-grp    media-grp     media-grp\"\n        \"sidebar poll         poll          poll\"\n        \"media   media        media         media\"\n        \"....... toolbar      toolbar       toolbar\"\n        \"compose compose      compose       compose\";\n    grid-template-columns: min-content minmax(0, max-content) 1fr min-content;\n    grid-template-rows: repeat(8, max-content);\n  }\n\n  .status-article.tap-on-status {\n    cursor: pointer;\n  }\n\n  .status-article.status-in-timeline {\n    border-bottom: 1px solid var(--main-border);\n  }\n\n  .status-article.status-direct {\n    background-color: var(--status-direct-background);\n  }\n\n  .status-article.status-in-own-thread {\n    grid-template-areas:\n      \"sidebar     author-name\"\n      \"sidebar     author-handle\"\n      \"spoiler     spoiler\"\n      \"spoiler-btn spoiler-btn\"\n      \"mentions    mentions\"\n      \"content     content\"\n      \"card        card\"\n      \"media-grp   media-grp\"\n      \"media       media\"\n      \"poll        poll\"\n      \"details     details\"\n      \"toolbar     toolbar\"\n      \"compose     compose\";\n    grid-template-columns: min-content 1fr;\n    grid-template-rows: repeat(7, max-content);\n  }\n</style>\n<script>\n  import StatusSidebar from './StatusSidebar.html'\n  import StatusHeader from './StatusHeader.html'\n  import StatusAuthorName from './StatusAuthorName.html'\n  import StatusAuthorHandle from './StatusAuthorHandle.html'\n  import StatusRelativeDate from './StatusRelativeDate.html'\n  import StatusDetails from './StatusDetails.html'\n  import StatusCard from './StatusCard.html'\n  import StatusToolbar from './StatusToolbar.html'\n  import StatusMediaAttachments from './StatusMediaAttachments.html'\n  import StatusContent from './StatusContent.html'\n  import StatusSpoiler from './StatusSpoiler.html'\n  import StatusComposeBox from './StatusComposeBox.html'\n  import StatusMentions from './StatusMentions.html'\n  import StatusPoll from './StatusPoll.html'\n  import Shortcut from '../shortcut/Shortcut.html'\n  import { store } from '../../_store/store'\n  import { goto } from '../../../../__sapper__/client'\n  import { registerClickDelegate } from '../../_utils/delegate'\n  import { classname } from '../../_utils/classname'\n  import { checkDomAncestors } from '../../_utils/checkDomAncestors'\n  import { scheduleIdleTask } from '../../_utils/scheduleIdleTask'\n  import { getAccountAccessibleName } from '../../_a11y/getAccountAccessibleName'\n  import { getAccessibleLabelForStatus } from '../../_a11y/getAccessibleLabelForStatus'\n  import { formatTimeagoDate } from '../../_intl/formatTimeagoDate'\n  import { measureText } from '../../_utils/measureText'\n  import { LONG_POST_LENGTH, LONG_POST_TEXT } from '../../_static/statuses'\n  import { absoluteDateFormatter, dayOnlyAbsoluteDateFormatter } from '../../_utils/formatters'\n  import { composeNewStatusMentioning } from '../../_actions/mention'\n  import { createStatusOrNotificationUuid } from '../../_utils/createStatusOrNotificationUuid'\n  import { addEmojiTooltips } from '../../_utils/addEmojiTooltips'\n\n  const INPUT_TAGS = new Set(['a', 'button', 'input', 'textarea', 'label'])\n  const isUserInputElement = node => INPUT_TAGS.has(node.localName)\n  const isToolbar = node => node.classList.contains('status-toolbar')\n  const isStatusArticle = node => node.classList.contains('status-article')\n\n  export default {\n    oncreate () {\n      const { elementId, isStatusInOwnThread, showContent } = this.get()\n      const { disableTapOnStatus } = this.store.get()\n      if (!isStatusInOwnThread && !disableTapOnStatus) {\n        // the whole <article> is clickable in this case\n        registerClickDelegate(this, elementId, (e) => this.onClickOrKeydown(e))\n      }\n      if (!showContent) {\n        scheduleIdleTask(() => {\n          // Perf optimization: lazily load the StatusContent when the user is idle so that\n          // it's fast when they click the \"show more\" button\n          this.set({ preloadHiddenContent: true })\n        })\n      }\n      scheduleIdleTask(() => addEmojiTooltips(this.refs.article))\n    },\n    components: {\n      StatusSidebar,\n      StatusHeader,\n      StatusAuthorName,\n      StatusAuthorHandle,\n      StatusRelativeDate,\n      StatusDetails,\n      StatusToolbar,\n      StatusMediaAttachments,\n      StatusContent,\n      StatusCard,\n      StatusPoll,\n      StatusSpoiler,\n      StatusComposeBox,\n      StatusMentions,\n      Shortcut\n    },\n    data: () => ({\n      notification: undefined,\n      replyVisibility: undefined,\n      preloadHiddenContent: false,\n      enableShortcuts: null\n    }),\n    store: () => store,\n    methods: {\n      onClickOrKeydown (e) {\n        const { type, keyCode, target } = e\n\n        const isClick = type === 'click'\n        const isEnter = type === 'keydown' && keyCode === 13\n        if (!isClick && !isEnter) {\n          return false\n        }\n        if (checkDomAncestors(target, isUserInputElement, isStatusArticle)) {\n          // this element or any ancestors up to the status-article element is\n          // a user input element\n          return false\n        }\n        if (checkDomAncestors(target, isToolbar, isStatusArticle)) {\n          // this element or any of its ancestors is the toolbar\n          return false\n        }\n\n        this.open()\n        return true\n      },\n      open () {\n        const { originalStatusId } = this.get()\n        goto(`/statuses/${originalStatusId}`)\n      },\n      openAuthorProfile () {\n        const { accountForShortcut } = this.get()\n        goto(`/accounts/${accountForShortcut.id}`)\n      },\n      async mentionAuthor () {\n        const { accountForShortcut } = this.get()\n        await composeNewStatusMentioning(accountForShortcut)\n      }\n    },\n    computed: {\n      originalStatus: ({ status }) => status.reblog ? status.reblog : status,\n      originalStatusId: ({ originalStatus }) => originalStatus.id,\n      statusId: ({ status }) => status.id,\n      notificationId: ({ notification }) => notification && notification.id,\n      account: ({ notification, status }) => (\n        (notification && notification.account) || status.account\n      ),\n      accountId: ({ account }) => account.id,\n      originalAccount: ({ originalStatus }) => originalStatus.account,\n      originalAccountId: ({ originalAccount }) => originalAccount.id,\n      accountForShortcut: ({ originalAccount, notification }) => notification ? notification.account : originalAccount,\n      visibility: ({ originalStatus }) => originalStatus.visibility,\n      plainTextContent: ({ originalStatus }) => originalStatus.plainTextContent || '',\n      plainTextContentOverLength: ({ plainTextContent }) => (\n        // measureText() is expensive, so avoid doing it when possible.\n        // Also measureText() typically only makes text shorter, not longer, so we can measure the raw length\n        // as a shortcut. (The only case where it makes text longer is with short URLs which get expanded to a longer\n        // placeholder.) This isn't 100% accurate, but we don't need perfect accuracy here because this is just\n        // to show a \"long post\" content warning.\n        plainTextContent.length > LONG_POST_LENGTH && measureText(plainTextContent) > LONG_POST_LENGTH\n      ),\n      spoilerText: ({ originalStatus, plainTextContentOverLength }) => (\n        originalStatus.spoiler_text || (plainTextContentOverLength && LONG_POST_TEXT)\n      ),\n      inReplyToId: ({ originalStatus }) => originalStatus.in_reply_to_id,\n      uuid: ({ $currentInstance, timelineType, timelineValue, notificationId, statusId }) => (\n        createStatusOrNotificationUuid($currentInstance, timelineType, timelineValue, notificationId, statusId)\n      ),\n      elementId: ({ uuid }) => uuid,\n      shortcutScope: ({ elementId }) => elementId,\n      isStatusInOwnThread: ({ timelineType, timelineValue, originalStatusId }) => (\n        (timelineType === 'status' || timelineType === 'reply') && timelineValue === originalStatusId\n      ),\n      isStatusInNotification: ({ originalStatusId, notification }) => (\n        notification && notification.status &&\n          notification.type !== 'mention' && notification.status.id === originalStatusId\n      ),\n      spoilerShown: ({ $spoilersShown, uuid }) => !!$spoilersShown[uuid],\n      replyShown: ({ $repliesShown, uuid }) => !!$repliesShown[uuid],\n      showCard: ({ originalStatus, isStatusInNotification, showMedia, $hideCards }) => (\n        !$hideCards &&\n        !isStatusInNotification &&\n        !showMedia &&\n        originalStatus.card &&\n        originalStatus.card.title\n      ),\n      showPoll: ({ originalStatus }) => (\n        originalStatus.poll\n      ),\n      showMedia: ({ originalStatus, isStatusInNotification }) => (\n        !isStatusInNotification &&\n        originalStatus.media_attachments &&\n        originalStatus.media_attachments.length\n      ),\n      originalAccountEmojis: ({ originalAccount }) => (originalAccount.emojis || []),\n      originalStatusEmojis: ({ originalStatus }) => (originalStatus.emojis || []),\n      originalAccountDisplayName: ({ originalAccount }) => (originalAccount.display_name || originalAccount.username),\n      originalAccountAccessibleName: ({ originalAccount, $omitEmojiInDisplayNames }) => {\n        return getAccountAccessibleName(originalAccount, $omitEmojiInDisplayNames)\n      },\n      createdAtDate: ({ originalStatus }) => originalStatus.created_at,\n      createdAtDateTS: ({ createdAtDate }) => new Date(createdAtDate).getTime(),\n      absoluteFormattedDate: ({ createdAtDateTS }) => absoluteDateFormatter().format(createdAtDateTS),\n      shortInlineFormattedDate: ({ createdAtDateTS, $now, $disableRelativeTimestamps }) => (\n        $disableRelativeTimestamps\n          ? dayOnlyAbsoluteDateFormatter().format(createdAtDateTS)\n          : formatTimeagoDate(createdAtDateTS, $now)\n      ),\n      reblog: ({ status }) => status.reblog,\n      ariaLabel: ({\n        originalAccount, account, plainTextContent, shortInlineFormattedDate, spoilerText,\n        showContent, reblog, notification, visibility, $omitEmojiInDisplayNames, $disableLongAriaLabels,\n        showMedia, showPoll\n      }) => (\n        getAccessibleLabelForStatus(originalAccount, account, plainTextContent,\n          shortInlineFormattedDate, spoilerText, showContent,\n          reblog, notification, visibility, $omitEmojiInDisplayNames, $disableLongAriaLabels,\n          showMedia, showPoll\n        )\n      ),\n      showHeader: ({ notification, status, timelineType }) => (\n        (notification && ['reblog', 'favourite', 'poll'].includes(notification.type)) ||\n        status.reblog ||\n        timelineType === 'pinned'\n      ),\n      className: ({ visibility, timelineType, isStatusInOwnThread, $underlineLinks, $disableTapOnStatus }) => (classname(\n        'status-article',\n        'shortcut-list-item',\n        'focus-fix',\n        timelineType !== 'direct' && visibility === 'direct' && 'status-direct',\n        timelineType !== 'search' && 'status-in-timeline',\n        isStatusInOwnThread && 'status-in-own-thread',\n        $underlineLinks && 'underline-links',\n        !$disableTapOnStatus && !isStatusInOwnThread && 'tap-on-status'\n      )),\n      content: ({ originalStatus }) => originalStatus.content || '',\n      showContent: ({ spoilerText, spoilerShown }) => !spoilerText || spoilerShown,\n      // These timestamp params may change every 10 seconds due to now() polling, so keep them\n      // separate from the generic `params` list to avoid costly recomputes.\n      timestampParams: ({ createdAtDate, createdAtDateTS, shortInlineFormattedDate, absoluteFormattedDate }) => ({\n        createdAtDate,\n        createdAtDateTS,\n        shortInlineFormattedDate,\n        absoluteFormattedDate\n      }),\n      // This params list deliberately does *not* include `spoilersShown` or `replyShown`, because these\n      // change frequently and would therefore cause costly recomputes if included here.\n      // The main goal here is to avoid typing by passing as many params as possible to child components.\n      params: ({\n        notification, notificationId, status, statusId, timelineType,\n        account, accountId, uuid, isStatusInNotification, isStatusInOwnThread,\n        originalAccount, originalAccountId, visibility,\n        replyVisibility, spoilerText, originalStatus, originalStatusId, inReplyToId,\n        enableShortcuts, shortcutScope, originalStatusEmojis\n      }) => ({\n        notification,\n        notificationId,\n        status,\n        statusId,\n        timelineType,\n        account,\n        accountId,\n        uuid,\n        isStatusInNotification,\n        isStatusInOwnThread,\n        originalAccount,\n        originalAccountId,\n        visibility,\n        replyVisibility,\n        spoilerText,\n        originalStatus,\n        originalStatusId,\n        inReplyToId,\n        enableShortcuts,\n        shortcutScope,\n        originalStatusEmojis\n      })\n    }\n  }\n</script>\n","<div class=\"status-header {isStatusInNotification ? 'status-in-notification' : ''} {notificationType === 'follow' ? 'header-is-follow' : ''}\">\n  <div class=\"status-header-avatar {timelineType === 'pinned' || notificationType === 'poll' ? 'hidden' : ''}\">\n    <Avatar {account} size=\"extra-small\"/>\n  </div>\n  <SvgIcon className=\"status-header-svg\" href={icon} />\n\n  <div class=\"status-header-content\">\n    {#if timelineType === 'pinned'}\n      <span class=\"status-header-author\">\n        Pinned toot\n      </span>\n    {:elseif notificationType !== 'poll'}\n      <a id={elementId}\n         href=\"/accounts/{accountId}\"\n         rel=\"prefetch\"\n         class=\"status-header-author\"\n         title=\"{'@' + account.acct}\"\n      >\n        <AccountDisplayName {account} />\n      </a>\n    {/if}\n\n    <span class=\"status-header-action\">{actionText}</span>\n  </div>\n</div>\n<style>\n  .status-header {\n    grid-area: header;\n    margin: 0 10px 5px 5px;\n    display: flex;\n    align-items: center;\n  }\n  .status-header.header-is-follow {\n    margin-bottom: 0; /* standalone, so doesn't need a bottom margin */\n  }\n\n  .status-header-avatar {\n    margin-left: 19px; /* offset for avatar, 48px - 24px - 5px */\n  }\n\n  :global(.status-header-svg) {\n    min-width: 18px;\n    margin-left: 20px;\n    width: 18px;\n    height: 18px;\n    fill: var(--deemphasized-text-color);\n  }\n\n  :global(.status-header.status-in-notification .status-header-svg) {\n    fill: var(--body-text-color);\n  }\n\n  .status-header-content {\n    display: flex;\n    flex: 1;\n    min-width: 0;\n    width: 0;\n  }\n\n  .status-header-author {\n    margin-left: 5px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: 0;\n  }\n\n  .status-header-action {\n    margin-left: 0.5ch;\n    white-space: nowrap;\n    flex: 1;\n  }\n\n  .status-header-action,\n  .status-header-author,\n  .status-header-author:visited,\n  .status-header-author:hover {\n    color: var(--deemphasized-text-color);\n  }\n\n  .status-in-notification .status-header-action,\n  .status-in-notification .status-header-author,\n  .status-in-notification .status-header-author:visited,\n  .status-in-notification .status-header-author:hover {\n    color: var(--body-text-color);\n  }\n\n  @media (max-width: 767px) {\n    :global(.status-header-svg) {\n      margin-left: 10px;\n    }\n  }\n\n  @media (max-width: 240px) {\n    .status-header {\n      margin-left: 0;\n    }\n    .status-header-avatar {\n      margin-left: 0;\n    }\n  }\n</style>\n<script>\n  import Avatar from '../Avatar.html'\n  import AccountDisplayName from '../profile/AccountDisplayName.html'\n  import SvgIcon from '../SvgIcon.html'\n  import { store } from '../../_store/store'\n\n  export default {\n    components: {\n      Avatar,\n      AccountDisplayName,\n      SvgIcon\n    },\n    store: () => store,\n    computed: {\n      elementId: ({ uuid }) => `status-header-${uuid}`,\n      notificationType: ({ notification }) => notification && notification.type,\n      icon: ({ notificationType, status, timelineType }) => {\n        if (timelineType === 'pinned') {\n          return '#fa-thumb-tack'\n        } else if ((notificationType === 'reblog') || (status && status.reblog)) {\n          return '#fa-retweet'\n        } else if (notificationType === 'follow') {\n          return '#fa-user-plus'\n        } else if (notificationType === 'poll') {\n          return '#fa-bar-chart'\n        }\n        return '#fa-star'\n      },\n      actionText: ({ notificationType, status, $currentVerifyCredentials }) => {\n        if (notificationType === 'reblog') {\n          return \"boosted your toot\"\n        } else if (notificationType === 'favourite') {\n          return \"favorited your toot\"\n        } else if (notificationType === 'follow') {\n          return \"followed you\"\n        } else if (notificationType === 'poll') {\n          if ($currentVerifyCredentials && status && $currentVerifyCredentials.id === status.account.id) {\n            return \"A poll you created has ended\"\n          } else {\n            return \"A poll you voted on has ended\"\n          }\n        } else if (status && status.reblog) {\n          return \"boosted\"\n        } else {\n          return ''\n        }\n      }\n    }\n  }\n</script>\n","import { removeEmoji } from '../_utils/removeEmoji'\n\nexport function getAccountAccessibleName (account, omitEmojiInDisplayNames) {\n  const emojis = account.emojis\n  let displayName = account.display_name || account.username\n  if (omitEmojiInDisplayNames) {\n    displayName = removeEmoji(displayName, emojis) || displayName\n  }\n  return displayName\n}\n","import { getAccount } from '../_api/user'\nimport { getRelationship } from '../_api/relationships'\nimport { database } from '../_database/database'\nimport { store } from '../_store/store'\n\nasync function _updateAccount (accountId, instanceName, accessToken) {\n  const localPromise = database.getAccount(instanceName, accountId)\n  const remotePromise = getAccount(instanceName, accessToken, accountId).then(account => {\n    /* no await */ database.setAccount(instanceName, account)\n    return account\n  })\n\n  try {\n    store.set({ currentAccountProfile: (await localPromise) })\n  } catch (e) {\n    console.error(e)\n  }\n  try {\n    store.set({ currentAccountProfile: (await remotePromise) })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nasync function _updateRelationship (accountId, instanceName, accessToken) {\n  const localPromise = database.getRelationship(instanceName, accountId)\n  const remotePromise = getRelationship(instanceName, accessToken, accountId).then(relationship => {\n    /* no await */ database.setRelationship(instanceName, relationship)\n    return relationship\n  })\n  try {\n    store.set({ currentAccountRelationship: (await localPromise) })\n  } catch (e) {\n    console.error(e)\n  }\n  try {\n    store.set({ currentAccountRelationship: (await remotePromise) })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport async function updateLocalRelationship (instanceName, accountId, relationship) {\n  await database.setRelationship(instanceName, relationship)\n  try {\n    store.set({ currentAccountRelationship: relationship })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport async function clearProfileAndRelationship () {\n  store.set({\n    currentAccountProfile: null,\n    currentAccountRelationship: null\n  })\n}\n\nexport async function updateProfileAndRelationship (accountId) {\n  const { currentInstance, accessToken } = store.get()\n\n  await Promise.all([\n    _updateAccount(accountId, currentInstance, accessToken),\n    _updateRelationship(accountId, currentInstance, accessToken)\n  ])\n}\n\nexport async function updateRelationship (accountId) {\n  const { currentInstance, accessToken } = store.get()\n\n  await _updateRelationship(accountId, currentInstance, accessToken)\n}\n","import { basename, auth } from './utils'\nimport { get, paramsString, DEFAULT_TIMEOUT } from '../_utils/ajax'\n\nexport async function getRelationship (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/relationships?${paramsString({ id: accountId })}`\n  const res = await get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n  return res[0]\n}\n","import { importShowComposeDialog } from '../_components/dialog/asyncDialogs/importShowComposeDialog.js'\nimport { store } from '../_store/store'\n\nexport async function composeNewStatusMentioning (account) {\n  store.setComposeData('dialog', { text: `@${account.acct} ` })\n  const showComposeDialog = await importShowComposeDialog()\n  showComposeDialog()\n}\n","import { get, DEFAULT_TIMEOUT } from '../_utils/ajax'\nimport { auth, basename } from './utils'\n\nexport function getVerifyCredentials (instanceName, accessToken) {\n  const url = `${basename(instanceName)}/api/v1/accounts/verify_credentials`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n\nexport function getAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}`\n  return get(url, auth(accessToken), { timeout: DEFAULT_TIMEOUT })\n}\n","export const importShowComposeDialog = () => import(\n  '../creators/showComposeDialog'\n).then(mod => mod.default)\n","export const importShowMediaDialog = () => import(\n  '../creators/showMediaDialog'\n).then(mod => mod.default)\n","export const FAVORITE_ANIMATION = [\n  {\n    properties: [\n      { transform: 'scale(1)' },\n      { transform: 'scale(2)' },\n      { transform: 'scale(1)' }\n    ],\n    options: {\n      duration: 333,\n      easing: 'ease-in-out'\n    }\n  },\n  {\n    properties: [\n      { fill: 'var(--action-button-fill-color)' },\n      { fill: 'var(--action-button-fill-color-pressed)' }\n    ],\n    options: {\n      duration: 333,\n      easing: 'linear'\n    }\n  }\n]\n\nexport const REBLOG_ANIMATION = FAVORITE_ANIMATION\n\nexport const FOLLOW_BUTTON_ANIMATION = [\n  {\n    properties: [\n      { transform: 'scale(1)' },\n      { transform: 'scale(2)' },\n      { transform: 'scale(1)' }\n    ],\n    options: {\n      duration: 333,\n      easing: 'ease-in-out'\n    }\n  }\n]\n","import { LOCALE } from './intl'\n\nexport const emojiPickerDataSource = `/emoji-${LOCALE}.json`\n\n// this should be undefined for English; it's already bundled with emoji-picker-element\nexport const emojiPickerI18n = process.env.EMOJI_PICKER_I18N\n\n// To avoid creating a new IDB database named emoji-picker-en-US, just\n// reuse the existing default \"en\" one (otherwise people will end up with\n// a stale database taking up useless space)\nexport const emojiPickerLocale = LOCALE === 'en-US' ? 'en' : LOCALE\n","import * as emojiDatabase from './emojiDatabase'\n\n// Add a nice little tooltip to native emoji showing the shortcodes you can type to search for them\n// TODO: titles are not accessible to keyboard users or touch users, and also they don't show up\n// if they're part of a link... should we have another system?\nexport async function addEmojiTooltips (domNode) {\n  if (!domNode) {\n    return\n  }\n  const emojis = domNode.querySelectorAll('.inline-emoji')\n  if (emojis.length) {\n    await Promise.all(Array.from(emojis).map(async emoji => {\n      const emojiData = await emojiDatabase.findByUnicodeOrName(emoji.textContent)\n      if (emojiData && emojiData.shortcodes) {\n        emoji.title = emojiData.shortcodes.map(_ => `:${_}:`).join(', ')\n      }\n    }))\n  }\n}\n","export function createStatusOrNotificationUuid (currentInstance, timelineType, timelineValue, notificationId, statusId) {\n  return `${currentInstance}/${timelineType}/${timelineValue}/${notificationId || ''}/${statusId || ''}`\n}\n","import Database from 'emoji-picker-element/database'\nimport { lifecycle } from './lifecycle'\nimport { emojiPickerLocale, emojiPickerDataSource } from '../_static/emojiPickerIntl'\n\nlet database\n\nfunction applySkinToneToEmoji (emoji, skinTone) {\n  if (!emoji || emoji.url) { // nonexistent or custom emoji\n    return emoji\n  }\n  const res = {\n    unicode: emoji.unicode,\n    shortcodes: emoji.shortcodes\n  }\n  if (skinTone > 0 && emoji.skins) { // non-default skin tone\n    const tone = emoji.skins.find(_ => _.tone === skinTone)\n    if (tone) {\n      res.unicode = tone.unicode\n    }\n  }\n  return res\n}\n\nexport function init () {\n  if (!database) {\n    database = new Database({\n      locale: emojiPickerLocale,\n      dataSource: emojiPickerDataSource\n    })\n  }\n}\n\nexport function setCustomEmoji (customEmoji) {\n  init()\n  database.customEmoji = customEmoji\n}\n\nexport async function findByUnicodeOrName (unicodeOrName) {\n  init()\n  const [emoji, skinTone] = await Promise.all([\n    database.getEmojiByUnicodeOrName(unicodeOrName),\n    database.getPreferredSkinTone()\n  ])\n  return applySkinToneToEmoji(emoji, skinTone)\n}\n\nexport async function findBySearchQuery (query) {\n  init()\n  const [emojis, skinTone] = await Promise.all([\n    database.getEmojiBySearchQuery(query),\n    database.getPreferredSkinTone()\n  ])\n  return emojis.map(emoji => applySkinToneToEmoji(emoji, skinTone))\n}\n\nif (process.browser) {\n  lifecycle.addEventListener('statechange', event => {\n    if (event.newState === 'frozen' && database) { // page is frozen, close IDB connections\n      console.log('closed emoji DB')\n      database.close()\n    }\n  })\n}\n","// Glitch Social can have statuses that just contain blockquote/ol/ul, no p\nconst STARTING_TAG_REGEX = /^<(?:p|blockquote|ol|ul)>/i\n\nexport function massageStatusPlainText (text) {\n  // GNU Social and Pleroma don't add <p> tags, so wrap them\n  if (text && !STARTING_TAG_REGEX.test(text)) {\n    text = `<p>${text}</p>`\n  }\n  return text\n}\n","import { emojifyText } from './emojifyText'\nimport { massageStatusPlainText } from './massageStatusPlainText'\n\nexport function massageUserText (text, emojis, $autoplayGifs) {\n  text = text || ''\n  text = emojifyText(text, emojis, $autoplayGifs)\n  text = massageStatusPlainText(text)\n  return text\n}\n"],"sourceRoot":""}