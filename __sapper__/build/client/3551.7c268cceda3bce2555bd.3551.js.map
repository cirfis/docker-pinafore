{"version":3,"sources":["webpack://pinafore/./src/routes/_utils/tesseractWorker.js"],"names":["origin","location","workerPath","langPath","corePath","cacheMethod","workerBlobURL","logger","message"],"mappings":"6KAQA,MAAM,OAAEA,GAAWC,SAEnB,MAAqB,IAAa,CAChCC,WAAY,GAAGF,KAAU,MACzBG,SAAU,GAAGH,KACbI,SAAU,GAAGJ,KAAU,MACvBK,YAAa,OACbC,eAAe,EACfC,OAAQC","file":"3551.7c268cceda3bce2555bd.3551.js","sourcesContent":["// TODO: we should use .wasm instead of .wasm.js. But currently can't because:\n// 1. not supported https://github.com/naptha/tesseract.js/issues/282#issuecomment-492263336\n// 2. webpack defaultRules issues (fixable with https://github.com/webpack/webpack/issues/8412#issuecomment-445586591)\n// We should explore this at a later date.\nimport corePath from 'tesseract.js-core/tesseract-core.wasm.js'\nimport workerPath from 'tesseract.js/dist/worker.min.js'\nimport createWorker from 'tesseract.js/src/createWorker.js'\n\nconst { origin } = location\n\nexport default () => createWorker({\n  workerPath: `${origin}/${workerPath}`,\n  langPath: `${origin}/`,\n  corePath: `${origin}/${corePath}`,\n  cacheMethod: 'none', // this file is 23.4MB ungzipped, so store in service worker instead (11MB gzipped)\n  workerBlobURL: false,\n  logger: message => {\n    console.log(message)\n  }\n})\n"],"sourceRoot":""}