{"version":3,"sources":["webpack://pinafore/./src/routes/_utils/pointerEvents.js","webpack://pinafore/./src/routes/_components/Draggable.html","webpack://pinafore/./src/routes/_components/dialog/components/MediaFocalPointEditor.html","webpack://pinafore/./src/routes/_utils/runTesseract.js","webpack://pinafore/./src/routes/_utils/asyncModules/importTesseractWorker.js","webpack://pinafore/./src/routes/_components/dialog/components/MediaAltEditor.html","webpack://pinafore/./src/routes/_components/dialog/components/MediaEditDialog.html","webpack://pinafore/./src/routes/_components/dialog/creators/showMediaEditDialog.js","webpack://pinafore/./src/routes/_thirdparty/intrinsic-scale/intrinsicScale.js"],"names":["hasPointerEvents","PointerEvent","isTouchDevice","document","test","navigator","userAgent","pointerDown","pointerUp","pointerLeave","pointerMove","createEventListener","event","node","callback","listener","e","clientX","clientY","addEventListener","removeEventListener","updateIndicatorStyle","throttleTimer","requestAnimationFrame","updateIndicatorClass","updateDraggableClass","calculateGBCR","requestPostAnimationFrame","clamp","x","Math","max","min","observe","rect","this","refs","indicator","getBoundingClientRect","set","dragging","dragOffsetX","left","dragOffsetY","top","indicatorWidth","indicatorHeight","get","area","offsetX","offsetY","width","y","height","target","classList","currentTarget","contains","fire","init","indicatorStyle","indicatorStyleAfterRaf","computedIndicatorClass","computedIndicatorClassAfterRaf","draggableClass","draggableClassAfterRaf","indicatorClass","onClick","onPointerDown","onPointerMove","onPointerLeave","onPointerUp","classname","parseAndValidateFloat","rawText","float","parseFloat","Number","isNaN","round","mediaItem","rawFocusX","rawFocusY","syncFromStore","rawKey","rawFocus","key","focusAsString","toString","observeAndSync","realm","index","media","rawFocusDecimal","store","setComposeData","scheduleIdleTask","save","focusX","focusY","container","containerWidth","containerHeight","measure","imageLoaded","setupSyncFromStore","setupSyncToStore","className","onImageLoad","indicatorX","indicatorY","onDragStart","onDragEnd","onDraggableChange","intrinsicWidth","intrinsicHeight","previewSrc","shortName","draggableAreaStyle","data","preview_url","nativeWidth","nativeHeight","intrinsicScale","scale","coordsToPercent","scaleWidth","scaleHeight","scaleX","scaleY","worker","destroyWorkerHandle","steps","status","proportion","async","spyOnWorkerProgress","onProgress","runnable","find","progressInfo","idx","findIndex","total","i","progress","getTotalProgress","initWorker","then","mod","default","load","loadLanguage","initialize","destroyWorker","terminate","cancelDestroyWorker","clearTimeout","runTesseract","url","res","recognize","text","setTimeout","updateRawTextInStore","description","textarea","autosize","s","extracting","mediaId","extractionProgress","file","database","fileUrl","URL","createObjectURL","revokeObjectURL","err","console","error","toast","setupAutosize","teardownAutosize","mediaAltCharLimit","length","overLimit","extractButtonText","extractButtonLabel","formatIntl","percent","show","close","altEditor","focalPointEditor","type","id","label","title","$currentInstance","$composeData","showMediaEditDialog","parentWidth","parentHeight","childWidth","childHeight","doRatio"],"mappings":"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","file":"7779.5eaa22f9d3125f0f0730.7779.js","sourcesContent":["import { get } from './lodash-lite'\n\nconst hasPointerEvents = process.browser && typeof PointerEvent === 'function'\n\n// Epiphany browser reports that it's a touch device even though it's not\nconst isTouchDevice = process.browser && 'ontouchstart' in document && !/Epiphany/.test(navigator.userAgent)\n\nlet pointerDown\nlet pointerUp\nlet pointerLeave\nlet pointerMove\n\nfunction createEventListener (event) {\n  return (node, callback) => {\n    const listener = e => {\n      // lightweight polyfill for clientX/clientY in pointer events,\n      // which is slightly different in touch events\n      if (typeof e.clientX !== 'number') {\n        e.clientX = get(e, ['touches', 0, 'clientX'])\n      }\n      if (typeof e.clientY !== 'number') {\n        e.clientY = get(e, ['touches', 0, 'clientY'])\n      }\n      callback(e)\n    }\n\n    node.addEventListener(event, listener)\n    return {\n      destroy () {\n        node.removeEventListener(event, listener)\n      }\n    }\n  }\n}\n\nif (hasPointerEvents) {\n  pointerDown = createEventListener('pointerdown')\n  pointerUp = createEventListener('pointerup')\n  pointerLeave = createEventListener('pointerleave')\n  pointerMove = createEventListener('pointermove')\n} else if (isTouchDevice) {\n  pointerDown = createEventListener('touchstart')\n  pointerUp = createEventListener('touchend')\n  pointerLeave = createEventListener('touchend')\n  pointerMove = createEventListener('touchmove')\n} else {\n  pointerDown = createEventListener('mousedown')\n  pointerUp = createEventListener('mouseup')\n  pointerLeave = createEventListener('mouseleave')\n  pointerMove = createEventListener('mousemove')\n}\n\nexport { pointerDown, pointerUp, pointerLeave, pointerMove }\n","<div class=\"draggable-area {draggableClassAfterRaf}\"\n     on:pointerMove=\"onPointerMove(event)\"\n     on:pointerLeave=\"onPointerLeave(event)\"\n     on:pointerUp=\"onPointerUp(event)\"\n     on:click=\"onClick(event)\"\n     ref:area\n>\n  <div class=\"draggable-indicator {computedIndicatorClassAfterRaf}\"\n       style={indicatorStyleAfterRaf}\n       on:pointerDown=\"onPointerDown(event)\"\n       ref:indicator\n  >\n    <div class=\"draggable-indicator-inner\">\n      <slot></slot>\n    </div>\n  </div>\n</div>\n<style>\n  .draggable-area {\n    position: relative;\n    touch-action: none;\n    cursor: pointer;\n  }\n  .draggable-indicator {\n    position: absolute;\n    cursor: grab;\n  }\n  .draggable-indicator.grabbing {\n    cursor: grabbing;\n  }\n  .draggable-indicator-inner {\n    pointer-events: none;\n    display: flex;\n  }\n</style>\n<script>\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../_utils/throttleTimer'\n  import { pointerUp, pointerDown, pointerLeave, pointerMove } from '../_utils/pointerEvents'\n  import { requestPostAnimationFrame } from '../_utils/requestPostAnimationFrame'\n  import { classname } from '../_utils/classname'\n\n  // ensure DOM writes only happen once after a rAF\n  const updateIndicatorStyle = throttleTimer(requestAnimationFrame)\n  const updateIndicatorClass = throttleTimer(requestAnimationFrame)\n  const updateDraggableClass = throttleTimer(requestAnimationFrame)\n\n  // ensure DOM reads only happen once after a rPAF\n  const calculateGBCR = throttleTimer(requestPostAnimationFrame)\n\n  const clamp = x => Math.max(0, Math.min(1, x))\n\n  export default {\n    oncreate () {\n      this.observe('dragging', dragging => {\n        if (dragging) {\n          this.fire('dragStart')\n        } else {\n          const { x, y } = this.get()\n          this.fire('dragEnd')\n          this.fire('change', { x, y })\n        }\n      }, { init: false })\n      this.observe('indicatorStyle', () => {\n        updateIndicatorStyle(() => {\n          const { indicatorStyle } = this.get()\n          this.set({ indicatorStyleAfterRaf: indicatorStyle })\n        })\n      })\n      this.observe('computedIndicatorClass', () => {\n        updateIndicatorClass(() => {\n          const { computedIndicatorClass } = this.get()\n          this.set(({ computedIndicatorClassAfterRaf: computedIndicatorClass }))\n        })\n      })\n      this.observe('draggableClass', () => {\n        updateDraggableClass(() => {\n          const { draggableClass } = this.get()\n          this.set({ draggableClassAfterRaf: draggableClass })\n        })\n      })\n    },\n    data: () => ({\n      dragging: false,\n      draggableClass: '',\n      draggableClassAfterRaf: '',\n      indicatorClass: '',\n      computedIndicatorClassAfterRaf: '',\n      x: 0,\n      y: 0,\n      indicatorWidth: 0,\n      indicatorHeight: 0,\n      indicatorStyleAfterRaf: ''\n    }),\n    computed: {\n      indicatorStyle: ({ x, y, indicatorWidth, indicatorHeight }) => (\n        `left: calc(${x * 100}% - ${indicatorWidth / 2}px); top: calc(${y * 100}% - ${indicatorHeight / 2}px);`\n      ),\n      computedIndicatorClass: ({ dragging, indicatorClass }) => classname(dragging && 'grabbing', indicatorClass)\n    },\n    methods: {\n      observe,\n      onPointerDown (e) {\n        console.log('Draggable: onPointerDown')\n        const rect = this.refs.indicator.getBoundingClientRect()\n        console.log('Draggable: e.clientX', e.clientX)\n        console.log('Draggable: e.clientY', e.clientY)\n        this.set({\n          dragging: true,\n          dragOffsetX: e.clientX - rect.left,\n          dragOffsetY: e.clientY - rect.top\n        })\n      },\n      onPointerMove (e) {\n        console.log('Draggable: onPointerMove')\n        const { dragging, indicatorWidth, indicatorHeight, dragOffsetX, dragOffsetY } = this.get()\n        if (dragging) {\n          console.log('Draggable: dragging')\n          calculateGBCR(() => {\n            const rect = this.refs.area.getBoundingClientRect()\n            const offsetX = dragOffsetX - (indicatorWidth / 2)\n            const offsetY = dragOffsetY - (indicatorHeight / 2)\n            const x = clamp((e.clientX - rect.left - offsetX) / rect.width)\n            const y = clamp((e.clientY - rect.top - offsetY) / rect.height)\n            this.set({ x, y })\n          })\n        }\n      },\n      onPointerUp (e) {\n        console.log('Draggable: onPointerUp')\n        this.set({ dragging: false })\n      },\n      onPointerLeave (e) {\n        console.log('Draggable: onPointerLeave')\n        this.set({ dragging: false })\n      },\n      onClick (e) {\n        console.log('Draggable: onClick')\n        console.log('Draggable: target classList', e.target.classList)\n        console.log('Draggable: currentTarget classList', e.currentTarget.classList)\n        if (!e.target.classList.contains('draggable-indicator')) {\n          console.log('Draggable: onClick handled')\n          const rect = this.refs.area.getBoundingClientRect()\n          const x = clamp((e.clientX - rect.left) / rect.width)\n          const y = clamp((e.clientY - rect.top) / rect.height)\n          this.set({ x, y })\n          this.fire('change', { x, y })\n        }\n      }\n    },\n    events: {\n      pointerUp,\n      pointerDown,\n      pointerLeave,\n      pointerMove\n    }\n  }\n</script>\n","<form class=\"media-focal-point-container {className}\"\n      aria-label=\"Enter the focal point (X, Y) for this media\"\n      on:resize=\"measure()\"\n>\n  <div class=\"media-focal-point-image-container\" ref:container>\n    <img\n      width={intrinsicWidth}\n      height={intrinsicHeight}\n      class=\"media-focal-point-image\"\n      src={previewSrc}\n      alt={shortName}\n      on:load=\"onImageLoad()\"\n    />\n    <div class=\"media-focal-point-backdrop\"></div>\n    <div class=\"media-draggable-area\"\n         style={draggableAreaStyle}\n    >\n      <!-- 52px == 32px icon width + 10px padding -->\n      <Draggable\n        draggableClass=\"media-draggable-area-inner\"\n        indicatorClass=\"media-focal-point-indicator {imageLoaded ? '': 'hidden'} {dragging ? 'dragging' : ''}\"\n        indicatorWidth={52}\n        indicatorHeight={52}\n        x={indicatorX}\n        y={indicatorY}\n        on:dragStart=\"onDragStart()\"\n        on:dragEnd=\"onDragEnd()\"\n        on:change=\"onDraggableChange(event)\"\n      >\n        <SvgIcon\n          className=\"media-focal-point-indicator-svg\"\n          href=\"#fa-crosshairs\"\n        />\n      </Draggable>\n    </div>\n  </div>\n  <div class=\"media-focal-point-inputs\">\n    <div class=\"media-focal-point-input-pair\">\n      <label for=\"media-focal-point-x-input-{realm}\">\n        X\n      </label>\n      <input type=\"number\"\n             step=\"0.01\"\n             min=\"-1\"\n             max=\"1\"\n             inputmode=\"decimal\"\n             placeholder=\"0\"\n             id=\"media-focal-point-x-input-{realm}\"\n             bind:value=\"rawFocusX\"\n      />\n    </div>\n    <div class=\"media-focal-point-input-pair\">\n      <label for=\"media-focal-point-y-input-{realm}\">\n        Y\n      </label>\n      <input type=\"number\"\n             step=\"0.01\"\n             min=\"-1\"\n             max=\"1\"\n             inputmode=\"decimal\"\n             placeholder=\"0\"\n             id=\"media-focal-point-y-input-{realm}\"\n             bind:value=\"rawFocusY\"\n      />\n    </div>\n  </div>\n</form>\n<style>\n  .media-focal-point-container {\n    display: flex;\n    flex-direction: column;\n  }\n  .media-focal-point-image-container {\n    flex: 1;\n    width: 100%;\n    position: relative;\n    min-height: 0;\n  }\n  .media-focal-point-image {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n  }\n\n  .media-focal-point-backdrop {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n  }\n\n  @supports (-webkit-backdrop-filter: blur(1px) saturate(1%)) or (backdrop-filter: blur(1px) saturate(1%)) {\n    .media-focal-point-backdrop {\n      -webkit-backdrop-filter: blur(1px) saturate(105%);\n      backdrop-filter: blur(1px) saturate(105%);\n      background-color: var(--focal-img-backdrop-filter);\n    }\n  }\n\n  @supports not ((-webkit-backdrop-filter: blur(1px) saturate(1%)) or (backdrop-filter: blur(1px) saturate(1%))) {\n    .media-focal-point-backdrop {\n      background-color: var(--focal-img-bg);\n    }\n  }\n\n  .media-focal-point-inputs {\n    display: flex;\n    padding: 10px;\n    justify-content: space-around;\n    width: auto;\n  }\n\n  .media-focal-point-input-pair {\n    display: flex;\n    align-items: center;\n  }\n\n  .media-focal-point-input-pair:first-child {\n    margin-right: 10px;\n  }\n\n  .media-focal-point-input-pair input {\n    margin-left: 10px;\n  }\n\n  .media-draggable-area {\n    position: absolute;\n  }\n\n  :global(.media-focal-point-indicator) {\n    background: var(--focal-bg);\n    border-radius: 100%;\n    display: flex;\n  }\n\n  :global(.media-focal-point-indicator:hover) {\n    background: var(--focal-bg-hover);\n  }\n\n  :global(.media-focal-point-indicator.dragging) {\n    background: var(--focal-bg-drag);\n  }\n\n  :global(.media-draggable-area-inner) {\n    width: 100%;\n    height: 100%;\n  }\n\n  :global(.media-focal-point-indicator-svg) {\n    width: 32px;\n    height: 32px;\n    padding: 15px;\n    fill: var(--focal-color);\n  }\n\n  @media (max-width: 767px) {\n    .media-focal-point-inputs {\n      padding: 5px 20px;\n      justify-content: space-around;\n    }\n    :global(.media-focal-point-indicator-svg) {\n      width: 32px;\n      height: 32px;\n      padding: 12px;\n      fill: var(--focal-color);\n    }\n    .media-focal-point-input-pair label {\n      font-size: 1.1em;\n    }\n    .media-focal-point-input-pair input {\n      font-size: 1.1em;\n    }\n  }\n</style>\n<script>\n  import { store } from '../../../_store/store'\n  import { get } from '../../../_utils/lodash-lite'\n  import { observe } from 'svelte-extras'\n  import { scheduleIdleTask } from '../../../_utils/scheduleIdleTask'\n  import { coordsToPercent, percentToCoords } from '../../../_utils/coordsToPercent'\n  import SvgIcon from '../../SvgIcon.html'\n  import { intrinsicScale } from '../../../_thirdparty/intrinsic-scale/intrinsicScale'\n  import { resize } from '../../../_utils/events'\n  import Draggable from '../../Draggable.html'\n\n  const parseAndValidateFloat = rawText => {\n    let float = parseFloat(rawText)\n    if (Number.isNaN(float)) {\n      float = 0\n    }\n    float = Math.min(1, float)\n    float = Math.max(-1, float)\n    float = Math.round(float * 100) / 100\n    return float\n  }\n\n  export default {\n    oncreate () {\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n    },\n    components: {\n      SvgIcon,\n      Draggable\n    },\n    data: () => ({\n      dragging: false,\n      rawFocusX: '0',\n      rawFocusY: '0',\n      containerWidth: 0,\n      containerHeight: 0,\n      imageLoaded: false,\n      className: ''\n    }),\n    store: () => store,\n    computed: {\n      mediaItem: ({ media, index }) => get(media, [index]),\n      focusX: ({ mediaItem }) => get(mediaItem, ['focusX'], 0),\n      focusY: ({ mediaItem }) => get(mediaItem, ['focusY'], 0),\n      previewSrc: ({ mediaItem }) => mediaItem.data.preview_url,\n      nativeWidth: ({ mediaItem }) => (\n        get(mediaItem, ['data', 'meta', 'original', 'width'], 300) // TODO: Pleroma placeholder\n      ),\n      nativeHeight: ({ mediaItem }) => (\n        get(mediaItem, ['data', 'meta', 'original', 'height'], 200) // TODO: Pleroma placeholder\n      ),\n      shortName: ({ mediaItem }) => (\n        // sometimes we no longer have the file, e.g. in a delete and redraft situation,\n        // so fall back to the description if it was provided\n        get(mediaItem, ['file', 'name']) || get(mediaItem, ['description']) || 'media'\n      ),\n      // intrinsic width/height to avoid layout shifting https://chromestatus.com/feature/5695266130755584\n      // note pleroma does not give us intrinsic width/height\n      intrinsicWidth: ({ mediaItem }) => get(mediaItem, ['data', 'meta', 'original', 'width']),\n      intrinsicHeight: ({ mediaItem }) => get(mediaItem, ['data', 'meta', 'original', 'height']),\n      scale: ({ nativeWidth, nativeHeight, containerWidth, containerHeight }) => (\n        intrinsicScale(containerWidth, containerHeight, nativeWidth, nativeHeight)\n      ),\n      scaleWidth: ({ scale }) => scale.width,\n      scaleHeight: ({ scale }) => scale.height,\n      scaleX: ({ scale }) => scale.x,\n      scaleY: ({ scale }) => scale.y,\n      indicatorX: ({ focusX }) => (coordsToPercent(focusX) / 100),\n      indicatorY: ({ focusY }) => ((100 - coordsToPercent(focusY)) / 100),\n      draggableAreaStyle: ({ scaleWidth, scaleHeight, scaleX, scaleY }) => (\n        `top: ${scaleY}px; left: ${scaleX}px; width: ${scaleWidth}px; height: ${scaleHeight}px;`\n      )\n    },\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        this.observe('mediaItem', mediaItem => {\n          const { rawFocusX, rawFocusY } = this.get()\n\n          const syncFromStore = (rawKey, rawFocus, key) => {\n            const focus = get(mediaItem, [key], 0) || 0\n            const focusAsString = focus.toString()\n            if (focusAsString !== rawFocus) {\n              this.set({ [rawKey]: focusAsString })\n            }\n          }\n\n          syncFromStore('rawFocusX', rawFocusX, 'focusX')\n          syncFromStore('rawFocusY', rawFocusY, 'focusY')\n        })\n      },\n      setupSyncToStore () {\n        const observeAndSync = (rawKey, key) => {\n          this.observe(rawKey, rawFocus => {\n            const { realm, index, media } = this.get()\n            const rawFocusDecimal = parseAndValidateFloat(rawFocus)\n            if (media[index][key] !== rawFocusDecimal) {\n              media[index][key] = rawFocusDecimal\n              this.store.setComposeData(realm, { media })\n              scheduleIdleTask(() => this.store.save())\n            }\n          }, { init: false })\n        }\n\n        observeAndSync('rawFocusX', 'focusX')\n        observeAndSync('rawFocusY', 'focusY')\n      },\n      onDraggableChange ({ x, y }) {\n        scheduleIdleTask(() => {\n          const focusX = parseAndValidateFloat(percentToCoords(x * 100))\n          const focusY = parseAndValidateFloat(percentToCoords(100 - (y * 100)))\n          const { realm, index, media } = this.get()\n          if (media[index].focusX !== focusX || media[index].focusY !== focusY) {\n            media[index].focusX = focusX\n            media[index].focusY = focusY\n            this.store.setComposeData(realm, { media })\n            scheduleIdleTask(() => this.store.save())\n          }\n        })\n      },\n      onDragStart () {\n        this.set({ dragging: true })\n      },\n      onDragEnd () {\n        this.set({ dragging: false })\n      },\n      measure () {\n        requestAnimationFrame(() => {\n          if (!this.refs.container) {\n            return\n          }\n          const rect = this.refs.container.getBoundingClientRect()\n          this.set({\n            containerWidth: rect.width,\n            containerHeight: rect.height\n          })\n        })\n      },\n      onImageLoad () {\n        this.measure()\n        this.set({ imageLoaded: true })\n      }\n    },\n    events: {\n      resize\n    }\n  }\n</script>\n","import { importTesseractWorker } from '../_utils/asyncModules/importTesseractWorker.js'\n\nconst DESTROY_WORKER_DELAY = 300000 // 5 minutes\n\nlet worker\nlet destroyWorkerHandle\n\n// TODO: it seems hacky that we have to spy on the tesseract worker to figure out its progress\nconst steps = [\n  { status: 'loading tesseract core', proportion: 0.1 },\n  { status: 'initializing tesseract', proportion: 0.05 },\n  { status: 'loading language traineddata', proportion: 0.1 },\n  { status: 'initializing api', proportion: 0.2 },\n  { status: 'recognizing text', proportion: 0.55 }\n]\n\nif (process.env.NODE_ENV !== 'production') {\n  if (steps.map(_ => _.proportion).reduce((a, b) => a + b, 0) !== 1) {\n    console.error('Steps do not add up to 1! You should probably fix this.')\n  }\n}\n\nasync function spyOnWorkerProgress (onProgress, runnable) {\n  const listener = event => {\n    const { data } = event\n    if (onProgress && data.status === 'progress' && steps.find(({ status }) => status === data.data.status)) {\n      onProgress(getTotalProgress(data.data))\n    }\n  }\n\n  worker.worker.addEventListener('message', listener)\n  try {\n    const res = await runnable()\n    return res\n  } finally {\n    worker.worker.removeEventListener('message', listener)\n  }\n}\n\nasync function initWorker (onProgress) {\n  if (!worker) {\n    worker = (await importTesseractWorker())()\n    await spyOnWorkerProgress(onProgress, async () => {\n      await worker.load()\n      await worker.loadLanguage('eng')\n      await worker.initialize('eng')\n    })\n  }\n}\n\nfunction destroyWorker () {\n  console.log('destroying tesseract worker')\n  if (worker) {\n    worker.terminate()\n    worker = null\n  }\n}\n\n// destroy the worker after a delay to reduce memory usage\nfunction scheduleDestroyWorker () {\n  cancelDestroyWorker()\n  destroyWorkerHandle = setTimeout(destroyWorker, DESTROY_WORKER_DELAY)\n}\n\nfunction cancelDestroyWorker () {\n  if (destroyWorkerHandle) {\n    clearTimeout(destroyWorkerHandle)\n    destroyWorkerHandle = null\n  }\n}\n\nfunction getTotalProgress (progressInfo) {\n  const idx = steps.findIndex(({ status }) => progressInfo.status === status)\n  let total = 0\n  for (let i = 0; i < idx; i++) {\n    total += steps[i].proportion\n  }\n  total += steps[idx].proportion * progressInfo.progress\n  return total\n}\n\nasync function recognize (url, onProgress) {\n  return spyOnWorkerProgress(onProgress, () => worker.recognize(url, 'eng'))\n}\n\nexport async function runTesseract (url, onProgress) {\n  cancelDestroyWorker()\n  await initWorker(onProgress)\n  try {\n    const res = await recognize(url, onProgress)\n    console.log('result', res)\n    return res.data.text\n  } finally {\n    scheduleDestroyWorker()\n  }\n}\n","export const importTesseractWorker = () => import(\n  '../../_utils/tesseractWorker.js'\n).then(mod => mod.default)\n","<div class=\"media-alt-editor {className}\">\n  <textarea\n    id=\"the-media-alt-input-{realm}-{index}\"\n    class=\"media-alt-input\"\n    placeholder=\"Describe for the visually impaired\"\n    ref:textarea\n    bind:value=rawText\n  ></textarea>\n  <label for=\"the-media-alt-input-{realm}-{index}\" class=\"sr-only\">\n    Describe for the visually impaired\n  </label>\n  <LengthGauge\n    {length}\n    {overLimit}\n    max={mediaAltCharLimit}\n  />\n  <LengthIndicator\n    {length}\n    {overLimit}\n    max={mediaAltCharLimit}\n    style=\"width: 100%; text-align: right;\"\n  />\n  <button class=\"extract-text-button\" type=\"button\"\n          on:click=\"onClick()\"\n          disabled={extracting}\n          aria-label={extractButtonLabel}\n  >\n    <SvgIcon href=\"{extracting ? '#fa-spinner' : '#fa-magic'}\"\n             className=\"extract-text-svg {extracting ? 'spin' : ''}\"\n    />\n    <span>{extractButtonText}</span>\n  </button>\n  <LengthGauge\n    length={extractionProgress}\n    overLimit={false}\n    max={100}\n  />\n</div>\n<style>\n  .media-alt-editor {\n    display: flex;\n    flex-direction: column;\n  }\n  .media-alt-input {\n    padding: 5px;\n    border: 1px solid var(--input-border);\n    min-height: 40px;\n    resize: none;\n    overflow: hidden;\n    word-wrap: break-word;\n    /* Text must be at least 16px or else iOS Safari zooms in */\n    font-size: 1.2em;\n    max-height: 70vh;\n  }\n\n  .extract-text-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10px;\n  }\n\n  .extract-text-button span {\n    margin-left: 15px;\n  }\n\n  :global(.extract-text-svg) {\n    fill: var(--button-text);\n    width: 18px;\n    height: 18px;\n  }\n\n  @media (max-height: 767px) {\n    .media-alt-input {\n      max-height: 40vh;\n      width: 100%;\n      overflow: auto;\n    }\n    .extract-text-button {\n      margin-top: 0;\n    }\n    button.extract-text-button {\n      padding: 7px 10px;\n    }\n  }\n\n  @media (min-height: 768px) {\n    .media-alt-input {\n      min-width: 250px;\n      min-height: 75px;\n    }\n  }\n</style>\n<script>\n  import { requestPostAnimationFrame } from '../../../_utils/requestPostAnimationFrame'\n  import { mark, stop } from '../../../_utils/marks'\n  import { autosize } from '../../../_thirdparty/autosize/autosize'\n  import { observe } from 'svelte-extras'\n  import { throttleTimer } from '../../../_utils/throttleTimer'\n  import { get } from '../../../_utils/lodash-lite'\n  import { store } from '../../../_store/store'\n  import { MEDIA_ALT_CHAR_LIMIT } from '../../../_static/media'\n  import LengthGauge from '../../LengthGauge.html'\n  import LengthIndicator from '../../LengthIndicator.html'\n  import { length } from 'stringz'\n  import { runTesseract } from '../../../_utils/runTesseract'\n  import SvgIcon from '../../SvgIcon.html'\n  import { toast } from '../../toast/toast'\n  import { formatIntl } from '../../../_utils/formatIntl'\n  import { database } from '../../../_database/database'\n\n  const updateRawTextInStore = throttleTimer(requestPostAnimationFrame)\n\n  export default {\n    oncreate () {\n      this.setupAutosize()\n      this.setupSyncFromStore()\n      this.setupSyncToStore()\n    },\n    ondestroy () {\n      this.teardownAutosize()\n    },\n    store: () => store,\n    data: () => ({\n      rawText: '',\n      mediaAltCharLimit: MEDIA_ALT_CHAR_LIMIT,\n      extracting: false,\n      className: '',\n      extractionProgress: 0\n    }),\n    computed: {\n      length: ({ rawText }) => length(rawText || ''),\n      overLimit: ({ mediaAltCharLimit, length }) => length > mediaAltCharLimit,\n      url: ({ media, index }) => get(media, [index, 'data', 'url']),\n      mediaId: ({ media, index }) => get(media, [index, 'data', 'id']),\n      extractButtonText: ({ extracting }) => extracting ? \"Extracting text…\" : \"Extract text from image\",\n      extractButtonLabel: ({ extractButtonText, extractionProgress, extracting }) => {\n        if (extracting) {\n          return formatIntl([\"Extracting text (\",[\"percent\"],\"% complete)…\"], { percent: Math.round(extractionProgress) })\n        }\n        return extractButtonText\n      }\n    },\n    methods: {\n      observe,\n      setupSyncFromStore () {\n        this.observe('media', media => {\n          media = media || []\n          const { index, rawText } = this.get()\n          const text = get(media, [index, 'description'], '')\n          if (rawText !== text) {\n            this.set({ rawText: text })\n          }\n        })\n      },\n      setupSyncToStore () {\n        this.observe('rawText', rawText => {\n          updateRawTextInStore(() => {\n            const { realm, index, media } = this.get()\n            if (media[index].description !== rawText) {\n              media[index].description = rawText\n              this.store.setComposeData(realm, { media })\n              this.store.save()\n            }\n            this.fire('resize')\n          })\n        }, { init: false })\n      },\n      setupAutosize () {\n        const textarea = this.refs.textarea\n        requestPostAnimationFrame(() => {\n          mark('autosize()')\n          autosize(textarea)\n          stop('autosize()')\n        })\n      },\n      teardownAutosize () {\n        mark('autosize.destroy()')\n        autosize.destroy(this.refs.textarea)\n        stop('autosize.destroy()')\n      },\n      measure () {\n        autosize.update(this.refs.textarea)\n      },\n      async onClick () {\n        this.set({ extracting: true })\n        try {\n          const { url, mediaId } = this.get()\n          const onProgress = progress => {\n            requestAnimationFrame(() => {\n              this.set({ extractionProgress: progress * 100 })\n            })\n          }\n          const file = await database.getCachedMediaFile(mediaId)\n          let text\n          if (file) { // Avoid downloading from the network a file that the user *just* uploaded\n            const fileUrl = URL.createObjectURL(file)\n            try {\n              text = await runTesseract(fileUrl, onProgress)\n            } finally {\n              URL.revokeObjectURL(fileUrl)\n            }\n          } else {\n            text = await runTesseract(url, onProgress)\n          }\n          const { media, index, realm } = this.get()\n          if (media[index].description !== text) {\n            media[index].description = text\n            this.store.setComposeData(realm, { media })\n            this.store.save()\n          }\n        } catch (err) {\n          console.error(err)\n          /* no await */ toast.say(\"Unable to extract text.\")\n        } finally {\n          this.set({ extracting: false })\n          setTimeout(() => {\n            requestAnimationFrame(() => {\n              this.set({ extractionProgress: 0 })\n            })\n          }, 400)\n        }\n      }\n    },\n    components: {\n      LengthGauge,\n      LengthIndicator,\n      SvgIcon\n    }\n  }\n</script>\n","<ModalDialog\n  {id}\n  {label}\n  {title}\n  background=\"var(--main-bg)\"\n  className=\"media-edit-dialog\"\n  on:show=\"measure()\"\n>\n  <div class=\"media-edit-dialog-container\">\n    <div class=\"media-edit-header-and-item media-edit-header-and-item-alt\">\n      <h2>Description</h2>\n      <MediaAltEditor\n        className=\"media-edit-item\"\n        {realm}\n        {index}\n        {media}\n        on:resize=\"measure()\"\n        ref:altEditor\n      />\n    </div>\n    {#if type === 'image' || type === 'gifv'}\n      <div class=\"media-edit-header-and-item media-edit-header-and-item-focal\">\n        <h2>Preview (focal point)</h2>\n        <MediaFocalPointEditor\n          className=\"media-edit-item\"\n          {realm}\n          {index}\n          {media}\n          ref:focalPointEditor\n        />\n      </div>\n    {/if}\n  </div>\n</ModalDialog>\n<style>\n  :global(.media-edit-dialog) {\n    max-width: calc(100%);\n  }\n\n  .media-edit-dialog-container {\n    display: flex;\n    flex-direction: row;\n    max-height: calc(100% - 44px); /* 44px X button height */\n    height: 100%;\n    width: 100%;\n  }\n\n  .media-edit-header-and-item {\n    padding: 10px;\n  }\n\n  .media-edit-header-and-item h2 {\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 767px) {\n    .media-edit-dialog-container {\n      flex-direction: column;\n      overflow: hidden;\n    }\n\n    .media-edit-dialog-container {\n      max-height: calc(100% - 25px); /* 25px X button height */\n    }\n\n    .media-edit-header-and-item {\n      flex: 1;\n      min-height: 0;\n      padding: 5px 10px;\n    }\n    .media-edit-header-and-item {\n      display: flex;\n      flex-direction: column;\n    }\n\n    :global(.media-edit-item) {\n      flex: 1;\n      min-height: 0;\n    }\n    .media-edit-header-and-item-alt {\n      flex-basis: 40%;\n    }\n    .media-edit-header-and-item-focal {\n      flex-basis: 60%;\n    }\n\n    .media-edit-header-and-item h2 {\n      font-size: 1.2em;\n      margin-bottom: 5px;\n    }\n  }\n\n</style>\n<script>\n  import ModalDialog from './ModalDialog.html'\n  import { show } from '../helpers/showDialog'\n  import { close } from '../helpers/closeDialog'\n  import { oncreate } from '../helpers/onCreateDialog'\n  import MediaFocalPointEditor from '../components/MediaFocalPointEditor.html'\n  import MediaAltEditor from '../components/MediaAltEditor.html'\n  import { store } from '../../../_store/store'\n  import { get } from '../../../_utils/lodash-lite'\n\n  export default {\n    oncreate,\n    components: {\n      ModalDialog,\n      MediaFocalPointEditor,\n      MediaAltEditor\n    },\n    methods: {\n      show,\n      close,\n      measure () {\n        this.refs.altEditor.measure()\n        if (this.refs.focalPointEditor) {\n          this.refs.focalPointEditor.measure()\n        }\n      }\n    },\n    store: () => store,\n    computed: {\n      media: ({ $currentInstance, $composeData, realm }) => (\n        get($composeData, [$currentInstance, realm, 'media'])\n      )\n    }\n  }\n</script>\n","import MediaFocalPointDialog from '../components/MediaEditDialog.html'\nimport { showDialog } from './showDialog'\n\nexport default function showMediaEditDialog (realm, index, type) {\n  return showDialog(MediaFocalPointDialog, {\n    label: \"Edit media\",\n    title: \"Edit media\",\n    realm,\n    index,\n    type\n  })\n}\n","// via https://github.com/bfred-it/intrinsic-scale/blob/3d058f79902653484092ad9a2f3e1d9a3d03f09e/index.js\n\nexport const intrinsicScale = (parentWidth, parentHeight, childWidth, childHeight) => {\n  const doRatio = childWidth / childHeight\n  const cRatio = parentWidth / parentHeight\n  let width = parentWidth\n  let height = parentHeight\n\n  if (doRatio > cRatio) {\n    height = width / doRatio\n  } else {\n    width = height * doRatio\n  }\n\n  return {\n    width,\n    height,\n    x: (parentWidth - width) / 2,\n    y: (parentHeight - height) / 2\n  }\n}\n"],"sourceRoot":""}