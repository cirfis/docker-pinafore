{"version":3,"sources":["webpack://pinafore/./src/routes/_components/Tooltip.html","webpack://pinafore/./src/routes/_api/utils.js","webpack://pinafore/./src/routes/_utils/ajax.js"],"names":["counter","e","preventDefault","stopPropagation","shown","mouseover","this","get","set","keyCode","toggle","id","event","onKeydown","dismiss","text","tooltipText","basename","instanceName","startsWith","targetIsLocalhost","auth","accessToken","Authorization","DEFAULT_TIMEOUT","MEDIA_WRITE_TIMEOUT","WRITE_TIMEOUT","makeFetchOptions","method","headers","options","res","Object","assign","Accept","signal","async","_fetch","url","fetchOptions","response","timeout","Promise","resolve","reject","fetch","then","setTimeout","Error","fetchWithTimeout","status","err","json","error","throwErrorIfInvalidResponse","_putOrPostOrPatch","body","FormData","JSON","stringify","put","post","getWithHeaders","del","paramsString","paramsObject","count","keys","forEach","key","value","Array","isArray","item","encodeURIComponent"],"mappings":"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","file":"9774.decd804cc7b837fdef5d.9774.js","sourcesContent":["<!-- Simple tooltip styled to look like an abbr.\n     Modeled after https://github.com/nico3333fr/van11y-accessible-simple-tooltip-aria\n-->\n<span class=\"tooltip-button\"\n      aria-describedby=\"tooltip-{id}\"\n      role=\"button\"\n      tabindex=\"0\"\n      on:mouseover=\"set({shown: true, mouseover: true})\"\n      on:mouseleave=\"set({shown: false, mouseover: false})\"\n      on:click=\"toggle(event)\"\n      on:keydown=\"onKeydown(event)\"\n>\n  {text}\n</span>\n<span id=\"tooltip-{id}\"\n      class=\"tooltip {shown ? 'shown' : ''}\"\n      role=\"tooltip\"\n      aria-hidden={!shown}\n>\n  {tooltipText}\n</span>\n<Shortcut scope=\"global\" key=\"Escape\" on:pressed=\"dismiss()\" />\n<style>\n  .tooltip-button {\n    border-bottom: 1px dotted;\n  }\n  .tooltip {\n    display: none;\n    position: absolute;\n    background: var(--tooltip-bg);\n    color: var(--tooltip-color);\n    padding: 5px 10px;\n    font-size: 0.9em;\n    border-radius: 4px;\n  }\n  .tooltip.shown {\n    display: inline-block;\n  }\n\n  @media (max-width: 767px) {\n    .tooltip {\n      left: 0;\n      transform: translateY(calc(-100% - 5px));\n    }\n  }\n\n</style>\n<script>\n  import Shortcut from './shortcut/Shortcut.html'\n\n  let counter = 0\n\n  export default {\n    data: () => ({\n      id: ++counter,\n      shown: false,\n      mouseover: false\n    }),\n    methods: {\n      toggle (e) {\n        e.preventDefault()\n        e.stopPropagation()\n        const { shown, mouseover } = this.get()\n        if (!mouseover) {\n          this.set({ shown: !shown })\n        }\n      },\n      onKeydown (e) {\n        if (e.keyCode === 32 || e.keyCode === 13) { // enter or space\n          this.toggle(e)\n        }\n      },\n      dismiss () {\n        this.set({ shown: false })\n      }\n    },\n    components: {\n      Shortcut\n    }\n  }\n</script>\n","function targetIsLocalhost (instanceName) {\n  return instanceName.startsWith('localhost:') || instanceName.startsWith('127.0.0.1:')\n}\n\nexport function basename (instanceName) {\n  if (targetIsLocalhost(instanceName)) {\n    return `http://${instanceName}`\n  }\n  return `https://${instanceName}`\n}\n\nexport function auth (accessToken) {\n  return {\n    Authorization: `Bearer ${accessToken}`\n  }\n}\n","export const DEFAULT_TIMEOUT = 20000\nexport const MEDIA_WRITE_TIMEOUT = 90000 // media uploads can take awhile\nexport const WRITE_TIMEOUT = 45000 // allow more time if the user did a write action\n\nfunction fetchWithTimeout (url, fetchOptions, timeout) {\n  return new Promise((resolve, reject) => {\n    fetch(url, fetchOptions).then(resolve, reject)\n    setTimeout(() => reject(new Error(`Timed out after ${timeout / 1000} seconds`)), timeout)\n  })\n}\n\nfunction makeFetchOptions (method, headers, options) {\n  const res = {\n    method,\n    headers: Object.assign(headers || {}, {\n      Accept: 'application/json'\n    })\n  }\n  if (options && options.signal) {\n    res.signal = options.signal\n  }\n  return res\n}\n\nasync function throwErrorIfInvalidResponse (response) {\n  if (response.status >= 300) {\n    const err = new Error('Request failed: ' + response.status)\n    err.status = response.status\n    throw err\n  }\n  const json = await response.json()\n  if (response.status >= 200 && response.status < 300) {\n    return { json, headers: response.headers }\n  }\n  if (json && json.error) {\n    throw new Error(response.status + ': ' + json.error)\n  }\n  throw new Error('Request failed: ' + response.status)\n}\n\nasync function _fetch (url, fetchOptions, options) {\n  let response\n  if (options && options.timeout) {\n    response = await fetchWithTimeout(url, fetchOptions, options.timeout)\n  } else {\n    response = await fetch(url, fetchOptions)\n  }\n  return throwErrorIfInvalidResponse(response)\n}\n\nasync function _putOrPostOrPatch (method, url, body, headers, options) {\n  const fetchOptions = makeFetchOptions(method, headers, options)\n  if (body) {\n    if (body instanceof FormData) {\n      fetchOptions.body = body\n    } else {\n      fetchOptions.body = JSON.stringify(body)\n      fetchOptions.headers['Content-Type'] = 'application/json'\n    }\n  }\n  return _fetch(url, fetchOptions, options)\n}\n\nexport async function put (url, body, headers, options) {\n  return (await _putOrPostOrPatch('PUT', url, body, headers, options)).json\n}\n\nexport async function post (url, body, headers, options) {\n  return (await _putOrPostOrPatch('POST', url, body, headers, options)).json\n}\n\nexport async function patch (url, body, headers, options) {\n  return (await _putOrPostOrPatch('PATCH', url, body, headers, options)).json\n}\n\nexport async function get (url, headers, options) {\n  return (await _fetch(url, makeFetchOptions('GET', headers, options), options)).json\n}\n\n/** @returns {json, headers} */\nexport async function getWithHeaders (url, headers, options) {\n  return _fetch(url, makeFetchOptions('GET', headers, options), options)\n}\n\nexport async function del (url, headers, options) {\n  return (await _fetch(url, makeFetchOptions('DELETE', headers, options), options)).json\n}\n\nexport function paramsString (paramsObject) {\n  let res = ''\n  let count = -1\n  Object.keys(paramsObject).forEach(key => {\n    const value = paramsObject[key]\n    if (Array.isArray(value)) { // rails convention for encoding multiple values\n      for (const item of value) {\n        res += (++count > 0 ? '&' : '') + encodeURIComponent(key) + '[]=' + encodeURIComponent(item)\n      }\n    } else {\n      res += (++count > 0 ? '&' : '') + encodeURIComponent(key) + '=' + encodeURIComponent(value)\n    }\n  })\n  return res\n}\n"],"sourceRoot":""}