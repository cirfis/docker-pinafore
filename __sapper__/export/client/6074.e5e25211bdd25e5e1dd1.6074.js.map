{"version":3,"sources":["webpack://pinafore/./src/routes/_actions/copyText.js","webpack://pinafore/./src/routes/_components/dialog/asyncDialogs/importShowCopyDialog.js","webpack://pinafore/./src/routes/_actions/mute.js","webpack://pinafore/./src/routes/_api/mute.js","webpack://pinafore/./src/routes/_actions/report.js","webpack://pinafore/./src/routes/_components/dialog/asyncDialogs/importShowReportDialog.js","webpack://pinafore/./src/routes/_actions/toggleMute.js","webpack://pinafore/./src/routes/_components/dialog/asyncDialogs/importShowMuteDialog.js","webpack://pinafore/./src/routes/_actions/setShowReblogs.js","webpack://pinafore/./src/routes/_api/showReblogs.js","webpack://pinafore/./src/routes/_actions/setDomainBlocked.js","webpack://pinafore/./src/routes/_api/blockDomain.js","webpack://pinafore/./src/routes/_components/dialog/components/AccountProfileOptionsDialog.html","webpack://pinafore/./src/routes/_components/dialog/creators/showAccountProfileOptionsDialog.js"],"names":["async","copyText","text","navigator","clipboard","writeText","toast","e","console","error","then","mod","default","setAccountMuted","accountId","mute","notifications","toastOnSuccess","currentInstance","accessToken","store","relationship","instanceName","url","timeout","muteAccount","unmuteAccount","formatIntl","message","reportStatusOrAccount","status","account","toggleMute","id","showReblogs","reblogs","setShowReblogs","setDomainBlocked","domain","block","blockDomain","unblockDomain","show","close","item","key","this","onMentionClicked","onFollowClicked","onBlockClicked","onMuteClicked","onShowReblogsClicked","onBlockDomainClicked","onCopyClicked","onReport","get","following","blocking","muting","showingReblogs","blockingDomain","report","items","onClick","event","label","title","verifyCredentials","requested","acct","username","followRequested","verifyCredentialsId","showing_reblogs","split","domain_blocking","blockLabel","blockIcon","muteLabel","muteIcon","followLabel","followIcon","isUser","showReblogsLabel","blockDomainLabel","reportLabel","icon","filter","Boolean","showAccountProfileOptionsDialog"],"mappings":"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","file":"6074.e5e25211bdd25e5e1dd1.6074.js","sourcesContent":["import { importShowCopyDialog } from '../_components/dialog/asyncDialogs/importShowCopyDialog.js'\nimport { toast } from '../_components/toast/toast'\n\nexport async function copyText (text) {\n  if (navigator.clipboard) { // not supported in all browsers\n    try {\n      await navigator.clipboard.writeText(text)\n      /* no await */ toast.say(\"Copied to clipboard\")\n      return\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const showCopyDialog = await importShowCopyDialog()\n  showCopyDialog(text)\n}\n","export const importShowCopyDialog = () => import(\n  '../creators/showCopyDialog'\n).then(mod => mod.default)\n","import { store } from '../_store/store'\nimport { muteAccount, unmuteAccount } from '../_api/mute'\nimport { toast } from '../_components/toast/toast'\nimport { updateLocalRelationship } from './accounts'\nimport { emit } from '../_utils/eventBus'\nimport { formatIntl } from '../_utils/formatIntl'\n\nexport async function setAccountMuted (accountId, mute, notifications, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    let relationship\n    if (mute) {\n      relationship = await muteAccount(currentInstance, accessToken, accountId, notifications)\n    } else {\n      relationship = await unmuteAccount(currentInstance, accessToken, accountId)\n    }\n    await updateLocalRelationship(currentInstance, accountId, relationship)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(mute ? \"Muted account\" : \"Unmuted account\")\n    }\n    emit('refreshAccountsList')\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(mute\n      ? formatIntl([\"Unable to mute account: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unmute account: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { auth, basename } from './utils'\nimport { post, WRITE_TIMEOUT } from '../_utils/ajax'\n\nexport async function muteAccount (instanceName, accessToken, accountId, notifications) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/mute`\n  return post(url, { notifications }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unmuteAccount (instanceName, accessToken, accountId) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/unmute`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","import { importShowReportDialog } from '../_components/dialog/asyncDialogs/importShowReportDialog.js'\n\nexport async function reportStatusOrAccount ({ status, account }) {\n  const showReportDialog = await importShowReportDialog()\n  showReportDialog({ status, account })\n}\n","export const importShowReportDialog = () => import(\n  '../creators/showReportDialog'\n).then(mod => mod.default)\n","import { importShowMuteDialog } from '../_components/dialog/asyncDialogs/importShowMuteDialog.js'\nimport { setAccountMuted } from './mute'\n\nexport async function toggleMute (account, mute) {\n  if (mute) {\n    (await importShowMuteDialog())(account)\n  } else {\n    await setAccountMuted(account.id, mute, /* notifications */ false, /* toastOnSuccess */ true)\n  }\n}\n","export const importShowMuteDialog = () => import(\n  '../creators/showMuteDialog'\n).then(mod => mod.default)\n","import { store } from '../_store/store'\nimport { setShowReblogs as setShowReblogsApi } from '../_api/showReblogs'\nimport { toast } from '../_components/toast/toast'\nimport { updateLocalRelationship } from './accounts'\nimport { formatIntl } from '../_utils/formatIntl'\n\nexport async function setShowReblogs (accountId, showReblogs, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    const relationship = await setShowReblogsApi(currentInstance, accessToken, accountId, showReblogs)\n    await updateLocalRelationship(currentInstance, accountId, relationship)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(showReblogs ? \"Showing boosts\" : \"Hiding boosts\")\n    }\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(showReblogs\n      ? formatIntl([\"Unable to show boosts: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to hide boosts: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { auth, basename } from './utils'\nimport { post, WRITE_TIMEOUT } from '../_utils/ajax'\n\nexport function setShowReblogs (instanceName, accessToken, accountId, showReblogs) {\n  const url = `${basename(instanceName)}/api/v1/accounts/${accountId}/follow`\n  return post(url, { reblogs: !!showReblogs }, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","import { store } from '../_store/store'\nimport { blockDomain, unblockDomain } from '../_api/blockDomain'\nimport { toast } from '../_components/toast/toast'\nimport { updateRelationship } from './accounts'\nimport { formatIntl } from '../_utils/formatIntl'\n\nexport async function setDomainBlocked (accountId, domain, block, toastOnSuccess) {\n  const { currentInstance, accessToken } = store.get()\n  try {\n    if (block) {\n      await blockDomain(currentInstance, accessToken, domain)\n    } else {\n      await unblockDomain(currentInstance, accessToken, domain)\n    }\n    await updateRelationship(accountId)\n    if (toastOnSuccess) {\n      /* no await */ toast.say(block ? \"Hid domain\" : \"Unhid domain\")\n    }\n  } catch (e) {\n    console.error(e)\n    /* no await */ toast.say(block\n      ? formatIntl([\"Unable to hide domain: \",[\"error\"]], { error: (e.message || '') })\n      : formatIntl([\"Unable to unhide domain: \",[\"error\"]], { error: (e.message || '') })\n    )\n  }\n}\n","import { post, WRITE_TIMEOUT, paramsString, del } from '../_utils/ajax'\nimport { auth, basename } from './utils'\n\nexport async function blockDomain (instanceName, accessToken, domain) {\n  const url = `${basename(instanceName)}/api/v1/domain_blocks?${paramsString({ domain })}`\n  return post(url, null, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n\nexport async function unblockDomain (instanceName, accessToken, domain) {\n  const url = `${basename(instanceName)}/api/v1/domain_blocks?${paramsString({ domain })}`\n  return del(url, auth(accessToken), { timeout: WRITE_TIMEOUT })\n}\n","<ModalDialog\n  {id}\n  {label}\n  {title}\n  shrinkWidthToFit={true}\n  background=\"var(--main-bg)\"\n>\n  <GenericDialogList selectable={false} {items} on:click=\"onClick(event)\"/>\n</ModalDialog>\n<script>\nimport ModalDialog from './ModalDialog.html'\nimport { store } from '../../../_store/store'\nimport GenericDialogList from './GenericDialogList.html'\nimport { show } from '../helpers/showDialog'\nimport { close } from '../helpers/closeDialog'\nimport { oncreate } from '../helpers/onCreateDialog'\nimport { setAccountBlocked } from '../../../_actions/block'\nimport { setAccountFollowed } from '../../../_actions/follow'\nimport { setShowReblogs } from '../../../_actions/setShowReblogs'\nimport { setDomainBlocked } from '../../../_actions/setDomainBlocked'\nimport { copyText } from '../../../_actions/copyText'\nimport { composeNewStatusMentioning } from '../../../_actions/mention'\nimport { toggleMute } from '../../../_actions/toggleMute'\nimport { reportStatusOrAccount } from '../../../_actions/report'\nimport { formatIntl } from '../../../_utils/formatIntl'\n\nexport default {\n  oncreate,\n  store: () => store,\n  computed: {\n    //\n    // begin copypasta (StatusOptionsDialog.html / AccountProfileOptionsDialog.html)\n    //\n    verifyCredentialsId: ({ verifyCredentials }) => verifyCredentials.id,\n    following: ({ relationship }) => relationship && relationship.following,\n    followRequested: ({ relationship }) => relationship && relationship.requested,\n    accountId: ({ account }) => account && account.id,\n    acct: ({ account }) => account.acct,\n    username: ({ account }) => account.username,\n    muting: ({ relationship }) => relationship && relationship.muting,\n    blocking: ({ relationship }) => relationship && relationship.blocking,\n    followLabel: ({ following, followRequested, account, username }) => {\n      if (typeof following === 'undefined' || !account) {\n        return ''\n      }\n      return (following || followRequested)\n        ? formatIntl([\"Unfollow \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Follow \",[\"account\"]], { account: `@${username}` })\n    },\n    followIcon: ({ following, followRequested }) => (\n      following ? '#fa-user-times' : followRequested ? '#fa-hourglass' : '#fa-user-plus'\n    ),\n    blockLabel: ({ blocking, username }) => (\n      blocking\n        ? formatIntl([\"Unblock \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Block \",[\"account\"]], { account: `@${username}` })\n    ),\n    blockIcon: ({ blocking }) => blocking ? '#fa-unlock' : '#fa-ban',\n    muteLabel: ({ muting, username }) => (\n      muting\n        ? formatIntl([\"Unmute \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Mute \",[\"account\"]], { account: `@${username}` })\n    ),\n    muteIcon: ({ muting }) => muting ? '#fa-volume-up' : '#fa-volume-off',\n    isUser: ({ accountId, verifyCredentialsId }) => accountId === verifyCredentialsId,\n    //\n    // end copypasta (StatusOptionsDialog.html / AccountProfileOptionsDialog.html)\n    //\n    showingReblogs: ({ relationship }) => relationship ? relationship.showing_reblogs : true,\n    showReblogsLabel: ({ showingReblogs, username }) => (\n      showingReblogs\n        ? formatIntl([\"Hide boosts from \",[\"account\"]], { account: `@${username}` })\n        : formatIntl([\"Show boosts from \",[\"account\"]], { account: `@${username}` })\n    ),\n    domain: ({ acct }) => acct.split('@')[1],\n    blockingDomain: ({ relationship }) => relationship && relationship.domain_blocking,\n    blockDomainLabel: ({ blockingDomain, domain }) => (\n      blockingDomain\n        ? formatIntl([\"Unhide \",[\"domain\"]], { domain })\n        : formatIntl([\"Hide \",[\"domain\"]], { domain })\n    ),\n    reportLabel: ({ username }) => (\n      formatIntl([\"Report \",[\"account\"]], { account: `@${username}` })\n    ),\n    items: ({\n      blockLabel, blocking, blockIcon, muteLabel, muteIcon,\n      followLabel, followIcon, following, followRequested,\n      accountId, verifyCredentialsId, username, isUser, showReblogsLabel,\n      domain, blockDomainLabel, reportLabel\n    }) => ([\n      !isUser && {\n        key: 'mention',\n        label: formatIntl([\"Mention \",[\"account\"]], { account: `@${username}` }),\n        icon: '#fa-comments'\n      },\n      !isUser && !blocking && {\n        key: 'follow',\n        label: followLabel,\n        icon: followIcon\n      },\n      !isUser && {\n        key: 'block',\n        label: blockLabel,\n        icon: blockIcon\n      },\n      !isUser && !blocking && {\n        key: 'mute',\n        label: muteLabel,\n        icon: muteIcon\n      },\n      !isUser && following && {\n        key: 'showReblogs',\n        label: showReblogsLabel,\n        icon: '#fa-retweet'\n      },\n      !isUser && domain && {\n        key: 'blockDomain',\n        label: blockDomainLabel,\n        icon: '#fa-ban'\n      },\n      !isUser && {\n        key: 'report',\n        label: reportLabel,\n        icon: '#fa-flag'\n      },\n      {\n        key: 'copy',\n        label: \"Copy link to account\",\n        icon: '#fa-link'\n      }\n    ].filter(Boolean))\n  },\n  methods: {\n    show,\n    close,\n    onClick (item) {\n      switch (item.key) {\n        case 'mention':\n          return this.onMentionClicked()\n        case 'follow':\n          return this.onFollowClicked()\n        case 'block':\n          return this.onBlockClicked()\n        case 'mute':\n          return this.onMuteClicked()\n        case 'showReblogs':\n          return this.onShowReblogsClicked()\n        case 'blockDomain':\n          return this.onBlockDomainClicked()\n        case 'copy':\n          return this.onCopyClicked()\n        case 'report':\n          return this.onReport()\n      }\n    },\n    async onMentionClicked () {\n      const { account } = this.get()\n      this.close()\n      await composeNewStatusMentioning(account)\n    },\n    async onFollowClicked () {\n      const { accountId, following } = this.get()\n      this.close()\n      await setAccountFollowed(accountId, !following, true)\n    },\n    async onBlockClicked () {\n      const { accountId, blocking } = this.get()\n      this.close()\n      await setAccountBlocked(accountId, !blocking, true)\n    },\n    async onMuteClicked () {\n      const { account, muting } = this.get()\n      this.close()\n      await toggleMute(account, !muting)\n    },\n    async onShowReblogsClicked () {\n      const { accountId, showingReblogs } = this.get()\n      this.close()\n      await setShowReblogs(accountId, !showingReblogs, true)\n    },\n    async onBlockDomainClicked () {\n      const { accountId, domain, blockingDomain } = this.get()\n      this.close()\n      await setDomainBlocked(accountId, domain, !blockingDomain, true)\n    },\n    async onCopyClicked () {\n      const { account } = this.get()\n      const { url } = account\n      this.close()\n      await copyText(url)\n    },\n    async onReport () {\n      const { account } = this.get()\n      this.close()\n      await reportStatusOrAccount({ account })\n    }\n  },\n  components: {\n    ModalDialog,\n    GenericDialogList\n  }\n}\n</script>\n","import AccountProfileOptionsDialog from '../components/AccountProfileOptionsDialog.html'\nimport { showDialog } from './showDialog'\n\nexport default function showAccountProfileOptionsDialog (account, relationship, verifyCredentials) {\n  return showDialog(AccountProfileOptionsDialog, {\n    label: \"Profile options\",\n    title: '',\n    account: account,\n    relationship: relationship,\n    verifyCredentials: verifyCredentials\n  })\n}\n"],"sourceRoot":""}